{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red255\green255\blue255;\red253\green128\blue8;
\red255\green255\blue10;\red11\green76\blue180;\red0\green0\blue0;\red0\green0\blue10;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c50196;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c57637\c0;
\cssrgb\c99942\c98555\c0;\cssrgb\c1961\c38824\c75686;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c3922;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12580\viewh13960\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Summary:
\b0 \
* About 9.5 years of extensive experience in Software Development and DevOps.\
* \ul Team Lead, Tech Lead & Mentor\ulnone : Taken ownership of backend API development and maintenance, collaborated with team to architect, design and implement solutions to address customer requirements and business needs, mentored team and evangelised the implementation of good software development practices such as TDD, BDD, code review strategies, pair programming, static code analysis and skill upgradation to improve software quality.\
* \ul Software Architect:\ulnone  Identified opportunities to architect and design new solutions to address customer\'92s business needs. Collaborated with customer-facing and in-house technical team to identify design issues with existing systems and discussed improvements using object oriented design principles, design patterns and architectural patterns.\
* \ul Service Extension Framework:\ulnone  Proposed, architected, and developed a framework for extending the functionality of proprietary third party services. The framework achieved this by providing extension points to plug custom logic for pre-processing and post-processing requests and responses respectively flowing to and from the services. This enabled client to independently extend the functionality of the vendor service without actually making modifications to the service. Furthermore, the framework also provided a platform for client to migrate from vendor application (feature by feature) to an in-house application if need be.\
* \ul Streamlining of Software Development Process:\ulnone  Collaborated with scrum master, module leads and team members to define strategy and guidelines for story point estimation and isolation of defect tracking (using Kanban board) to give management a better visibility of team velocity for estimating timelines.\
* \ul Pro-Tem App:\ulnone  Proposed, architected and developed a self-learning proxy application that caches client requests, service responses and replays them when the actual service is unavailable. This enabled development team to continue with development and testing process during service downtime. The app can also notify the team and vendor if the service is down through e-mail and slack (configurable).\
* \ul Working API Documentation:\ulnone  Paired with teammate to extract calls made by UI and Mobile App to backend API service to define PostMan collections for sharing with team. This enabled the team to diagnose issues by isolating layer(s) and identifying root cause quickly. Many high priority issues were fixed quickly with the PostMan collection.\
* \ul Automated Vendor Application Deployment:\ulnone  Paired with teammate and developed a python 2.x based application to deploy a third-party vendor application on Linux server(s). The application handled automatic unpacking of artefacts, selectively copying files and running selenium based web browser configuration. The automation reduced deployment time from 1 - 1.5 hours of manual effort to 3 - 5 minutes and also allowed development team to focus more on user stories and issues.\
* \ul API Testing Framework (work in progress):\ulnone  Architected and led a team to develop MVP for a generic API testing framework for running tests against REST API and SOAP API. The framework is designed to be decoupled from the actual test suite that can be versioned independently. The application can be leveraged to run a suite of tests on API automatically whenever changes are pushed. This also enables teams to maintain an integration test suite for the API.\
* \ul Automated Issue Locator App (work in progress):\ulnone  A Hackathon idea that won a price is a POC for an application that can intercept request-response flow across a multi-tiered application and generate reports consisting of all the requests and responses involved in the event of a failure. The application enables reproducing the issue quickly and aid in narrowing down on a specific layer for further analysis. Furthermore, the application can also track history and provide search capability if the same or similar issue recurred.\
* \ul Agile for Infrastructure Automation:\ulnone  Proposed and presented a strategy to management for leveraging agile methodology for CI-CD pipelines and infrastructure automation. The strategy involves developing infrastructure code in small deployable increments and maintaining the code in source control system. This strategy enables streamlining the DevOps process and also handling complex setup as small incremental changes.\
* \ul Jira Dashboard Plugins:\ulnone  Developed Jira plugins (Gadgets) to display Bamboo deployment metrics and Test automation report on Jira dashboard using Atlassian SDK.\
* \ul CI-CD Pipeline Setup for Java based Web Applications:\ulnone  Defined branching and merging strategy and Jenkins jobs for building and deploying a Multi-tier Web application consisting of UI, backend and persistence layers. Wrote puppet modules to automatically provision the environments for the applications. The solution automated infrastructure setup and build and deployment process to minimize manual effort and human errors.\
* \ul SVN Hooks:\ulnone  Developed hook scripts to enforce rules on commits such as naming conventions and access control for version control system. The solution enabled maintaining discipline and standards across the team.\
* \ul MSCGen Sequence Diagram Generator in Java: \ulnone  Developed a Proof of Concept (POC) for integrating C language based MSCGen application into Java based application. The POC was later used to develop MSCGen Jira plugin (
\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
https://marketplace.atlassian.com/plugins/com.addteq.confluence.plugin.mscgen.mscgen/cloud/o verview
\fs24 \cf0 \kerning1\expnd0\expndtw0 ) and MSCGen Confluence plugin (
\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
https://marketplace.atlassian.com/plugins/com.addteq.jira.plugin.mscgen.JIRA- Mscgen/cloud/overview
\fs24 \cf0 \kerning1\expnd0\expndtw0 ) available in Atlassian Marketplace.\
* \ul REST API for JIRA and Bamboo:\ulnone  Paired with team lead to develop a framework for exposing Jira and Bamboo operations as REST API endpoints to perform CRUD operations using automation scripts. The framework enabled automated provisioning and configuration of development environments for distributed teams.\cb3 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb4 * \ul Automated Bulk Migration of Requirements to Confluence:\ulnone  Developed a Ruby based application to process business requirements captured in MS Excel and migrate to Confluence as a well formatted site. This enabled development team to track requirements at a centralised location and share with stakeholders.\cb1 \
* \ul Infrastructure as Code (IoC):\ulnone  Developed and maintained Puppet modules to spin up virtual machines, automate installation and configuration of Jenkins with plugins & build jobs and software tools (MySQL, SonarQube, etc\'85).\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Technical Skills:
\b0 \

\b Concepts:
\b0  \
	* Data Structures, Algorithms, Object Oriented Programming Principles (OOPs), functional programming concepts, Test Driven Development (TDD), Behaviour Driven Development (BDD), concurrent programming concepts, SOLID design principles, design patterns, architectural patterns, architectural Quality Attributes (QA), Kruchten 4+1 architectural view model, micro-services architectural concepts, event driven architectures, TOGAF enterprise architectural framework (beginner)\

\b Languages:
\b0  \
	* Java 8+ & 7, XML & XSD, UML 2, Linux command-line tools, Bash scripting, Python 3.x, \cb5 SQL\cb1 , HTML5 (learning), CSS3 (learning), JavaScript - ES6 (learning), Ruby (programmed in the past), Perl (programmed in the past)\

\b Frameworks:
\b0  \
	* Spring 4.x, Spring Boot 2.x, \cb5 Spring Cloud\cb1 , Hibernate 4.x, React JS (learning), React-Native (learning), Express JS (learning)\

\b Technologies:
\b0  \
	* Servlet, JSP, JaxRS, JaxWS, JDBC, JPA, JMS, JaxB, JaxP, Docker\

\b API Design Tools:
\b0  \
	* Open API / Swagger\

\b CMS:
\b0  \
	* WordPress (beginner)\

\b Version Control Tools:
\b0  \
	* Git, GitHub, Bitbucket, Subversion\

\b Testing Tools / Libraries:
\b0  \
	* JUnit, Mockito, PowerMock, Cucumber\

\b Build Tools:
\b0  \
	* Apache Maven 3, \cb5 Gradle\cb1 , Apache ANT (used in the past)\

\b Continuous Integration & Deployment Tools:
\b0  \
	* CircleCI, Atlassian Bamboo, Jenkins, uDeploy\

\b Project Management Tools:
\b0  \
	* Atlassian Jira, Atlassian Trello\

\b Documentation Tools:
\b0 \
	* Atlassian Confluence\

\b Platforms:
\b0  \
	* Linux (Ubuntu, Centos), Windows (10, 7, XP, 2012 R2 Server, 2003 Server)\

\b Cloud Computing Platforms:
\b0  \
	* Amazon AWS, Heroku (PaaS)\

\b Artefact Repositories:
\b0  \
	* Artifactory, Nexus\

\b Code Quality Tools:
\b0  \
	* SonarLint / SonarQube / SonarCloud (static code analysis), Eclemma (code coverage), HP Fortify (Security scanning)\

\b Environments:
\b0  \
	* Node.js (beginner, used in the past)\

\b Persistence Tools:
\b0  \
	* MySQL, \cb3 Elasticsearch\cb1 , PostgreSQL, \cb5 MongoDB\cb3 , \cb5 Redis\cb1 \

\b Orchestration Tools:
\b0  \
	* \cb5 Kubernetes\cb1 \
\

\b Freelancer
\b0 \
\

\b Atria Healthcare Web Application:
\b0 \
\
Requirement: A simple website advertising the company, it\'92s services, location and contact details. Users who visit the company should be able to contact the company\
\

\b Back End Development:
\b0 \
* Architected, designed and implemented API backend in Java 8+, Spring Boot, JUnit and Mockito for handling UI requests for appointment bookings.\
* Developed persistence logic using Spring JPA and PostgreSQL for persisting user appointment bookings.\
* Developed event driven E-Mail logic using observer design pattern to send emails to company representatives (front desk) and also a well formatted HTML e-mail acknowledgements to customers.\
* Defined automated build and deployment of Backend API in CircleCI using YAML configuration file for automated build and deployment of the backend application to Heroku PaaS when incremental changes are push to GitHub.\
\

\b Front End Development (Learning):
\b0 \
* Defined content based on services offered by customer and styled the UI (from template) for responsiveness.\
* Purchased domain on GaDaddy and hosting service on Bluehost to host the front-end.\
* Programmed REST API client logic in JavaScript using Fetch API to send requests to backend REST API service for enabling a website user to book appointments with the company.\
* Enabled HTTPS for secure access to the site by purchasing a certificate and getting it installed by the host provider.\
\
\

\b VIC Care Website:
\b0 \
Requirement: A user friendly registration form for customers with details relevant for service sought and notifications to company for quick revertion. Improved look and feel for website. Sight is not secure.\
\

\b Back End Development:
\b0 \
* Setup PHP based email notifications in WordPress to notify the company when a website visitor registers through the registration form\
\

\b Front End Development (Learning):
\b0 \
* Designed and developed a user registration form for an existing website from scratch in phases such as defining wire-frame diagrams (using draw.io), selecting a theme of colours and designing the UI using Sketch tool\
* Integrated bootstrap and customised the UI using CSS for responsive design for different screen sizes\
* Developed location search logic in JavaScript using asynchronous fetch API client and Google location search API to simplify the entry of address details for better user experience  \
* Integrated the registration form with Wordpress site using custom WordPress plugins\
* Styled the existing website using new colour theme and fonts to revamp the overall look and feel of the website\
* Fixed insecure site issue by converting HTTP URLs in the web site to HTTPS URLs\cb3 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Education:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 * 
\b Master of Science in Computer Science
\b0  from 
\b Rutgers - The State University of New Jersey, NJ, USA
\b0  - with 
\b GPA
\b0  of 
\b 3.9
\b0  out of 
\b 4.0
\b0  - 2013\
* 
\b Bachelor of Engineering in Computer Science & Computer Engineering
\b0  from 
\b M.S. Ramaiah Institute of Technology
\b0  (affiliated with Visveswaraiah Technological University), Bangalore, India - 2007\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Professional Experience:
\b0 \

\b Dell International Services
\b0  (Acquired by 
\b NTT Data
\b0 ) - Bangalore, India - June 2017 - April 2020\

\b \
API Development Lead
\b0  
\b (Official position: Software Development Advisor)
\b0 \

\b Project: API Development & Maintenance
\b0 \
	1. Owned and maintained a backend API module (Digital Services) with team to collaborate and share development tasks.\
	2. Met with team on a daily basis to identify blockers and come up with technical solutions to get un-blocked.\
	3. Collaborated with product owner, module leads and rest of the team in backlog grooming to discuss technical challenges, estimate efforts and propose candidate solutions.\
	4. Implemented and evangelised good software design principles such as SOLID design principles, design patterns and architectural patterns to collaboarte and come up with reasonably good designs for user stories.\
	5. Implemented features for user stores using TDD in Java, Java EE Web Services, Spring (3.x), Hibernate (4.x), XML, JSON, JUnit and Mockito\
	6. Worked with Quality Analysis (QA) team to reproduce issues if any and either paired or distributed the issues among the team for analysis and fix.\
	7. Mentored (as necessary) and worked with team to ensure that good software development practices and tools are implemented such as SOLID design principles, design patterns, TDD, UML, code coverage, static code analysis, and code review to produce good quality software applications.\
\

\b Environment:
\b0 \
	1. Languages: Java\cb5  (7, 8, 13)\cb3 , Python\cb5  (2.x, 3.x)\cb3 \
	2. Technologies: Java EE, Spring, Spring Boot, Hibernate, \cb5 UML 2\cb3 \
	3. Tools: Eclipse (Enterprise Edition), Sprint Tool Suite (STS), VS Code, Elasticsearch, Oracle, Docker, SonarCube, Linux Commandline tools\
\

\b DevOps Lead (Official position: Software Development Advisor)
\b0 \
Project: CI-CD Pipeline Setup and Infrastructure Automation\
	1. Shared knowledge with DevOps team about Atlassian tools and past experience with implementation of DevOps practices.\
	2. Collaborated and architected solutions for CI-CD pipeline setup including branching and merging strategy, build and deployment jobs, versioning artefacts in repository and infrastructure automation.\
	3. Explored new tools, technologies and techniques to be leveraged into the Development process such as Git instead of SVN, Bitbucket pipelines, Docker containers with Kubernetes orchestration and automation of development environment setup.\
	4. Sought for opportunities to identify repeated manual tasks and proposed and implemented solutions to automate the tasks to cut down cost in terms of manual efforts and time.\

\b \
Environment:\
	
\b0 1. Languages: \cb5 Bash\cb3 \
	2. Tools: Atlassian Bamboo, Python (2.x)\
\

\b Achievements:\
	
\b0 1. \ul Awards and Recognition:\ulnone  Won three 
\b Making a Difference
\b0  awards and 
\b Long-Term Service
\b0  award from in a single year.\
	2. \ul Innovation Team Formation:\ulnone  Offered by upper management to lead an innovation team and a forum for discussions to build innovative solutions to challenging problems. Ideas from teammates were discussed, brainstormed and improvised to take it up with client for implementation.\
	3. \ul Contribution to Other Module(s):\ulnone  \
		* Researched and documented steps to install and open TCP ports in firewall for Content Management System (CMS) layer for enabling HTTPS. \
		* Worked with CMS team to identify and fix an outdated SOAP client by regenerating stubs from WSDL in a POC and then integrating it with the CMS module.\
	5. \ul Intra-Company Hackathon Participation: Rescue Bots\ulnone  - Conceptualised, designed and developed a POC for a system of flying vehicles, ground vehicles and centralised control unit which can collaborate and coordinate to perform rescue operation in the event of a disaster. Each vehicle performs a specific task such as search for victims, delivery of aid packets or actual rescue. The project is now open sourced (open for contributions) - 
\fs29\fsmilli14667 \cf6 \cb1 \expnd0\expndtw0\kerning0
https://github.com/technicalrescuers/rescue_bots/tree/development 
\fs24 \cf7 \uc0\u8232 
\b \
\
Happiest Minds - Bangalore, Karnataka, India - Dec 2015 to Dec 2016
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf7 \
Senior DevOps Engineer\
\
Project: Architect a Solution to Migrate Jira from Standalone Virtual Machine to AWS\
\ul Responsibilities
\b0 \
	\ulnone 1. Led the effort and worked with team mate to device, document and implement a migration plan for Jira Application from an on premise Virtual Machine to AWS EC2 and AWS RDS (Jira database migration) considering different options for privacy and security provided by AWS \cb5 Virtual Private Cloud (VPC)
\b \cb1  
\b0 and hence reducing infrastructure maintenance cost for client.\
\

\b Project: Jira Dashboard Gadgets Development to Display Bamboo Deployment Metrics and Test Reports
\b0 \

\b \ul \ulc7 Responsibilities
\b0 \
	\ulnone 1. Proposed and developed Jira Gadget plugin using Atlassian SDK and JavaScript to query and display a summary of Bamboo deployments on Jira dashboard which enabled customer to monitor the deployment trends as a success to failure ratio (
\f1\fs32 \cf6 \cb3 https://github.com/a5221985/bamboo-deployment-metrics-gadget-plugin)
\f0\fs24 \cf7 \cb1 .\
	2. Proposed and developed Jira Gadget plugin using Atlassian SDK, JavaScript (front end) and NodeJS (backend API, to take advantage of asynchronous programming style for performance and simplicity of implementation) to process and display automated test results on Jira dashboard which enabled the customer to monitor test failures (
\f1\fs32 \cf6 \cb3 https://github.com/a5221985/test-report-parser-gadget-plugin
\f0\fs24 \cf7 \cb1 ).\
	3. Setup Atlassian Jira, Atlassian Bamboo and SonarQube standalone instances on premise and established two way OAuth communication between Jira and Bamboo to support Jira to fetch data from Bamboo and SonarQube for displaying other kinds of metrics on dashboard for testing the plugins and other gadgets.\
\

\b Environment:
\b0 \
	1. Languages: JavaScript, Java\
	2. Technologies: J2EE\
	3. Tools: Atlassian Jira, Atlassian Bamboo, Atlassian Bitbucket (for source code management), Atlassian SDK, Node.js, SonarQube, Maven\
\

\b Project: Semi-Automation of Atlassian Jira Workflow Based on Team Activity\
\ul Responsibilities:
\b0 \
	\ulnone 1. Developed Jira REST API client script (.bat script) using command line tools (curl, xmlstartlet for parsing xml, jq for parsing json) to process Bitbucket commit messages and invoke transitions automatically in Jira workflow from \'93In Development\'94 to \'93Code Committed\'94 which enabled busy teams to focus only on manual transitions in the workflow.\
	2. Developed Bamboo REST API client script using command line tools to fetch build status of the application and invoke transition automatically in Jira workflow from \'93Code Committed\'94 to \'93Build Succeeded\'94 or \'93Build Failed\'94 which tied commits to build statuses.\
	3. Defined Git hook scripts to enforce development team to provide Jira ID in commit messages for Jira REST API client script to associate commits to Jira stories for automated transitions to work.\
	4. Streamlined and defined a cleaner branching and merging strategy as a good development practice as well as for facilitating the semi-automated workflow management to work.\
	5. Mentored junior developers on Atlassian tools to bring them up to speed and share the tasks among the team.\
\

\b Project: CI-CD Build and Deployment Pipeline and Infrastructure Setup for N-Tier JavaScript/ Java/ PostgreSQL based Web Application
\b0 \

\b \ul Responsibilities:
\b0 \ulnone \
	1. Setup CI-CD pipelines for an N-Tier web application to be able to run the application in a single node or in a cluster of nodes (with redundancy and load balancing features) in AWS cloud for quick feedbacks on commits and for minimisation of manual effort.\
	2. Automated Infrastructure setup using Puppet modules to setup tools for CI-CD pipelines such as Jenkins with plugins (build server), SonarQube (static code analysis), Nexus (artefact repository) and tools for running the application such as JDK, Tomcat, Node.js, PostgreSQL, Maven, Postfix, Gulp and Bower which enabled teams to spin up nodes quickly with requisite configuration and easily scale up or down horizontally or vertically.\
	4. The CI-CD pipeline setup consisted of different phases for building the Java module using Maven, JavaScript module using NPM, Bower and Gulp and deploying PostgreSQL SQL script files, performing static code analysis (with code coverage) using SonarQube, running automated tests and finally deploying the artefacts to target environments (development, stage and production) or versioning artefacts in Nexus which automated build and deployment of all the modules.\
	\cb5 5. A challenging problem with PostgreSQL deployment where   
\b \cb1 \
	
\b0 6. Setup a Jenkins job to auto merge development branch into master branch if the build and deployment of the development branch succeeded. The setup assumed that the build and deployment consisted of automated tests sufficient enough for validating the incremental changes in the development branch.\
\

\b Environment:\
	
\b0 1. Languages: Bash, Puppet DSL\
	2. Tools: JDK, Jenkins, SonarQube, Nexus, Apache Tomcat, Git, Atlassian Bitbucket, PostgreSQL with command line tools, Node.js, JaCoCo, Amazon AWS\
	3. Technologies: Cloud Computing, virtualisation
\b \
\
Project: CI-CD Build and Deployment Pipeline and Infrastructure Setup for C# .Net Application for Customer\
\ul Responsibilities\ulnone \
	
\b0 1. Provisioned Bamboo build agent for building a C# .Net application in a dedicated AWS EC2 Windows 2012 R2 instance and established communication with cloud based Bamboo server which enabled offloading the build process to a separate machine (horizontal scaling) and avoid overloading Bamboo server (load balancing).\
	2. Setup SonarQube standalone server on AWS EC2 instance and configured the C# .Net project with SonarQube scanner (MSBuild.SonarQube.Runner.exe) for static code analysis which generated reports in SonarQube dashboard for client to get feedback on code quality.\
	3. Configured build and deployment pipeline for C# .Net application in Bamboo consisting of phases such as automatic code checkout, compilation, running automated tests, static code analysis and deployment to remote server (IIS server on Windows) by invoking command-line tools (MSBuild, MSTest) on code commit.
\b \
\
\
JP Morgan Chase - Columbus, OH, USA - Apr 2014 to Jun 2015\

\b0 \

\b Senior Software Engineer (Contract)\
\
Project: REST API Plugin Development for Atlassian Jira and Atlassian Bamboo to Automate Tool Setup\

\b0 	1. Paired with a lead developer to develop REST API endpoints using JAX-RS and Atlassian SDK for the creation of workflows and agile boards in Jira and build and deployment plans in Bamboo for automating installation and configuration of Atlassian tools through scripts for distributed in-house development teams.\
	2. Followed good software development practices such as Test Driven Development (TDD) (using JUnit and JMockit) for unit and integration tests with nearly perfect code coverage, Agile methodology (using Jira) for capturing features in Gherkin language (BDD), source code management (using Bitbucket) with rigorous code reviews and feedback from team and documentation in markdown language (open source community standard practice).
\b \

\b0 \

\b Project: Development of Application for Automated Migration of Business Requirements from MS Excel to Atlassian Confluence for Internal Client\

\b0 	1. Built a Ruby based application for an internal client to automate migration of thousands of business requirements from MS Excel to Atlassian Confluence for sharing the business requirements as well formatted documents with the stake holders at an accessible central location.\
	2. Configured Atlassian Confluence to expose built-in REST API for the Ruby application to connect and upload the requirements.\
	3. Implemented the application iteratively in small increments with good modularity and readability through rigorous code reviews and feedback from team and by following Agile development process with frequent demos and feedback from client.\
\

\b Project: Analytics Application Development for Atlassian Tools to Analyse Development Team Activities\

\b0 	1. Contributed modules to a Ruby based analytics application for processing Atlassian tools\'92 (Jira, Bamboo, Confluence, etc\'85) user data and pushing to ElasticSearch for displaying trends in usage of the tools by different in-house teams.\
	2. Followed good software development practices such as Test Driven Development (TDD) using RSpec for unit and integration tests, Agile methodology in Jira with features captured in Gherkin language for standardisation, source code management in Bitbucket with code reviews and feedback and modularity of code for readability and maintainability.\
\

\b Environment:
\b0 \
	1. Languages: Java 7, Ruby, Bash\
	2. Technologies: J2EE\
	3. Tools: Atlassian SDK, Jira, Bamboo, Confluence
\b \
\
\
Addteq - Princeton NJ USA - Dec 2013 to April 2014\
\
Atlassian Plugin Development and Configuration Management\

\b0 \

\b Project: Hook Scripts Programming for Source Control Systems\

\b0 	1. Developed a Perl based pre-commit hook script for Subversion (SVN) using SVN::CheckJira CPAN Perl module (library) to integrate with Atlassian Jira and perform validation against Jira stories and issues for allowing or preventing commits. The validations that can be performed are if Jira ticket specified in commit message is valid, and if the owner of the issue is committing the message. This allows streamlining of development process to support fast paced Agile development cycles.\
	2. Developed Bash based pre-commit hook scripts a) to prevent commits without commit message, b) to prevent commits to tags (expected to be frozen for release), c) to prevent commits during code freeze for release to enforce good development practices for supporting fast paced Agile development cycles.\
	3. Developed Perl based hook script(s) using Email::Send::Gmail CPAN Perl module (library) to send out emails to team on various SVN events.\
	4. Automated adding multiple binary files in a deep hierarchical structure for commit using Linux command line tools (find with exec) by searching and recursively adding the files in a single command. Such commands and scripts can be integrated with source control system for development team as utilities to improve efficiency.\
\

\b Project: Cloud Based REST API Service for Generating Sequence Diagrams Remotely\

\b0 	1. Developed Perl & CGI based REST API Service with HTTP GET and HTTP POST request endpoints for querying and generating UML sequence diagrams using remotely hosted MSCGen application. This enables multiple client applications (Jira, Confluence, etc\'85) to use light weight REST API Client to connect to the Service instead of integrating the MSCGen application with the client. Furthermore, business can host the REST API as SaaS.\
\

\b Project: Proof of Concept (POC) for Having C Language Based MSCGen UML Sequence Diagram Generation Capability in Java for Confluence and Jira Plugin Development\

\b0 	1. Figured out a solution for having C language based MSCGen UML sequence diagram generation capability in Java based applications by calling executable binary version of MSCGen application from Java using Java.lang.Process built in library class and wrapping the call inside a method that had received command line arguments through method parameters. The solution provided an API for any type of Java application to utilise the capabilities of MSCGen application.\
	2. Worked on an alternative solution later on by modifying MSCGen source code to generate library file (.so) for integrating the applicaiton into Java application using JNI.\
	3. The proof of concept was later on used as an API to develop MSCGen Confluence plugin 
\f1\fs29\fsmilli14667 \cf8 (\cf2 https://marketplace.atlassian.com/plugins/com.addteq.confluence.plugin.mscgen.mscgen/cloud/o verview\cf8 ) 
\fs24 \cf7 \

\f0  and MSCGen Jira plugin (
\f1\fs29\fsmilli14667 \cf2 https://marketplace.atlassian.com/plugins/com.addteq.jira.plugin.mscgen.JIRA- Mscgen/cloud/overview
\f0\fs24 \cf7 ) available in Atlassian Marketplace.\
\

\b Environment:
\b0 \
	1. Technology: REST API, 
\b \
\
MCS Global - New Brunswick, NJ USA - Jul 2013 to Nov 2013\
\
VMWare Intern\
Training: Learn and Implement VMWare Virtualisation Technology
\b0 \
	1. Learnt VMWare virtualisation technology and how to install and configure ESXi 5 bare metal hypervisor for hosting Virtual Machines on HP servers.\
	2. Learnt how to provision virtual machines on bare metal hypervisors and install guest Operating System (OS) (such as Windows 2008 R2, Ubuntu).\
	3. Learnt how to provision and configure virtual switches and virtual networks for virtual machines for communication over network.\
	4. Learnt how to configure ESXi cluster for automated migration of virtual machines across ESXi servers for balancing load across cluster.\
	5. Learnt how to configure ESXi cluster for high availability and fault tolerance to provision new virtual machines on different ESXi host in case of failure of an existing virtual machine with or without zero downtime.\
\

\b Environment:
\b0 \
	1. Tools: VMWare vSphere Tools Suite, Windows, Ubuntu\
\
\

\b GE GXS India Technology Centre (OpenText now) - Bangalore, India Jul 2007 - Feb 2011\
Software Engineer\
\
Project: UI and WebServices development for B2B Applications Offered for Processing Orders and Tracking Logistics
\b0 \
	1. Researched and documented functional modules and request-response flow through the modules of an in-house application for sharing and discussing with peers which benefitted us new joiners as a startup guide to get quickly up to speed to start contributing.\
	2. Researched and proposed the implementation of IEEE Software Requirements Specification and UI flow diagram for new projects which were accepted by management and were used by team as a standard to document analysis and design of new application modules in standard format to share with customer.\
	3. A challenging requirement where a data entered in popup window had to be validated against backend persistent data before the actual submission was accomplished by researching, discovering and implementing Ajax technology which enabled sending XML validation data before the actual submission of the popup.\
	4. A challenging requirement where Comma Separated Values (CSV) file uploaded by application user needed to be processed for persistence in datastore was accomplished by researching and discovering Microsoft ActiveX which was used to write parsing logic to transform CSV data to request data.\
	5. Learnt from Manager how to deploy our in-house application (C++ dll files) in development environment (IIS Server on Windows 2003) and subsequently took up the ownership for deployment when new build artefacts were produced.\
\

\b Environment:\

\b0 	1. Langauges: XML, XSLT, XPATH, HTML 4, DHTML, JavaScript, C++, Java\
	2. Technologies: J2EE, Ajax\
	3. Tools: Subversion (SVN), IIS, Visual Studio, MyEclipse, WebLogic, Apache Tomcat
\b \
\
\
Academic Publications:
\b0 \
	1. \ul Masters Thesis:\ulnone  Research and Development of a Genetic Design Tool\
	2. \ul MOST: a software environment for constraint - based metabolic modelling and strain design:\ulnone  Oxford Bioinformatics Journal (https://academic.oup.com/bioinformatics/article/31/4/610/2748222)\
\

\b Memorable Academic Projects:
\b0 \
	1. \ul MOST GDBB Genetic Design Tool:\ulnone  Implemented GDBB algorithm (most efficient algorithm of the time) in Java and Swing (with workers). The software tool can be used to process genome of an organism to identify genes to be knocked out to optimise generation of certain products of interest.  (https://most.camden.rutgers.edu/index.html)\
	2. \ul A Simulator for Spacecraft Orbital Error Correction System:\ulnone  A software application that simulates an on-board system that corrects spacecraft\'92s orientation in space. The spacecraft employed sensors, actuators and onboard processing unit with a tight feedback loop. The simulator was designed in UML using Object Oriented Design (OOD) principles and implemented in QT (for GUI) and C++ (for backend) with concurrency and Unix system calls for responding to events.\
\

\b Personal Projects:
\b0 \
	1. \ul Veracity Validator App (Open Source) (In-progress):\ulnone  An n-tier application that can verify spoken or written content against known authentic sources of truth to isolate facts from opinions or misinformation. The application is designed to have UI and Mobile front end components for receiving inputs and display results and a scalable event driven backend API for processing and persisting data.\
	2. \ul Farm Automation (Open Source) (In-progress):\ulnone  A system of pluggable embedded application modules for existing farm equipment to automate farming process. The modules can be sensors and actuators that can coordinate with each other and with central processing unit to perform complex maneuv\ul \
	\ulnone 3. \ul Animal Welfare Portfolio (In-progress):\ulnone  A website for a family friend who is an Animal Welfare Board of India Officer highlighting her good work and for inviting volunteers.\
\

\b Open Source Conference Participation - 2019
\b0 \
\
}