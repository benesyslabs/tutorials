# How to Find Brilliant SaaS Ideas #
1. Put SaaS idea through aggressive stress testing
	1. 3 essential pillars:
		1. Viability: Can it make money?
		2. Feasibility: Can it be made? (cat it be realistically carried out?)
		3. Desirability: Does anyone want it?
	2. We must be able to close the triange with the above sides
		1. No business if either of the above is missing
	3. Testing:
		1. Dogfooding: Are we able to consume our own product while we construct it?
			1. **The best products are made by people who are solving their own problems using it**
				1. **SaaS that makes my own life easier** (empathy)
					1. Ask: **Do I have enough experience to understand the problem that I am trying to solve at scale?**
						1. Example: Todo list for me should be able to scale into Jira say
							1. Do I have experience as a project manager with large scale projects?
							2. Have I managed a team and delegated work?
								1. Answers to these questions are important to build such solutions
					2. Ask: If I don't have experience dealing with recruiting in the 100s, I don't want to build HR solution then
					3. Ask: If we have never worked in a big org, we don't want to build a team collaboration tool or an internal wiki
					4. Ask: If we have never run an agency hiring consultants paid by the hour, then we don't want to build a time tracking tool
			2. Dogfooding helps us to:
				1. Perfectly know the frustrations of user
				2. Build trust as a founder (for the user)
			3. If I don't understand the problem very well, it will be un-realistic to comprehend:
				1. If it is feasible to carry out a solution
				2. Hard to test desirability and verify it if I am not in that list
		2. Is your problem worth solving?
			1. Ensure that the problem is big and frequent enough that it is viable to build a SaaS around solving it
				1. Consider 4 quadrants to identify to which quadrant the problem belongs:
					1. Big & Infrequent problem
						1. Huge pain when it happens but doesn't happen so frequently
							1. Examples: Travel planning, yearly financial reporting, filtering candidates, ...
						2. This is good place to be:
							1. Users are willing to pay for solving big problems (passes the test)
					2. Small & Frequent problem
						1. It is not a big deal but happens so often that it becomes a big deal
							1. Examples: file sharing, expensive tracking, data visualization (avoiding spreadsheet)
						2. Good place to be
							1. Users are ready to pay for small but recurring problems (passes the test)
					3. Small & Infrequent problem
						1. Not a big deal and happens rarely which is not a big headache
							1. Doesn't pass the test
					4. Big & Frequent:
						1. Design collaboration
						2. Managing projects
						3. Managing Internal knowledge-base (for big orgs)
							1. Best place to be (passes with an A+)
				2. **Consider if the problem is big enough to build a viable solution around it** (some problems are not worth solving)
		3. Can you afford your pricing?
			1. We need to able to charge enough for our business to survive
			2. It is tricky to find a pricing point for a product
			3. We must be able to afford the low price
			4. 4 quadrants:
				1. High expense & High revenue
					1. High expense:
						1. High server cost per user
						2. Complex product which needs extensive on-boarding and customer support
						3. High customer acquisition cost
							1. If advertising in a very competitive space
					2. It is okay (passes the test)
				2. Low expense & Low revenue (low price product)
					1. Low expense per user
					2. Simple & intuitive to use & more bug-free
						1. Users can sign up and start using without any help
							1. Word of mouth is enough and no need for expensive advertisement
					3. We can scale in terms of the number of users without worrying about expenses
						1. It passes the test
							1. Don't raise prices but look at acquiring more customers
				3. Low expense & High revenue
					1. Simple, intuitive & scalable at a low cost
					2. **We have hit a really good idea**
						1. **Ideal quadrant for finding SaaS idea**
							1. Un-realistic in most cases (very few products are found here)
						2. Passes the test with an A+
				4. High expense & Low revenue
					1. If product does not incentivise user to pay a high price but product is complex, expensive to support and is in a very competitive space
					2. Idea will not pass the test
						1. We might need to increase the price to push it to high revenue & high expense (because operation cost will not be covered)
