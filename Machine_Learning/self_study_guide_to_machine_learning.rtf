{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12540\viewh14040\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Tips to Learn Machine Learning:\
1. Get some Python Foundation (3-4 months): The language doesn\'92t really matter. It could be R, Java, Python, whatever. What matters is picking one and sticking with it.\
	1. Why Python?\
		1. Lowest barrier to entry - more like English\
	2. Resources: DataCamp\
2. Start building things when you\'92re not ready:\
	1. Apply what you\'92ve learned as soon as you can\
	2. You will never be 100% ready\
3. There\'92s a lot out there so reduce the clutter\
	1. There are plenty of courses out there. All of them great. It\'92s hard to find a bad one\
		1. Custom pathway?\
			1. Hands-On Machine Learning with Scikit-Learn & Tensorflow\
			2. fast.ai - Introduction to Machine Learning for Coders: Launch\
			3. Applied Data Science with Python Specialization - Coursera\
4. Research is necessary but pointless if you can\'92t apply it\
	1. You\'92ll see articles and papers coming out every day about new machine learning methods. Ignore them (unless it is directly relevant to the project I am working on)\
5. A little every day\
	1. 3-year old you was a learning machine (a machine learner?).\
	2. In a couple of years, you went from no words to talking with people who had been speaking for decades.\
	3. How?\
		1. Because you practised a little per day.\
		2. Then the compound interest kicked in.\
			1. 1% better every day = 3700% better at the end of the year\
	4. Leave the things that we can\'92t control:\
		1. How fast I learn?\
		2. How fast I can solve a project?\
		3. How quickly I grasp the concepts?\
	5. What can I control?\
		1. How much time I spend on learning the concepts everyday\
6. Don\'92t beat yourself up for not knowing something:\
	1. Conversation:\
		1. Have you ever built a recommendation engine?\
		2. No\
		3. We\'92ve got a project that requires one as a proof of concept, think you can figure it out?\
		4. Sure!\
7. What\'92s the rush?\
	1. Don\'92t jump the gun. Take time to learn\
		}