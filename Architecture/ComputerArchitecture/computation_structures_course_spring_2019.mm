<map version="1.0.1">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1570438891618" ID="ID_1133246887" MODIFIED="1570438904037" TEXT="Computation Structures Course Spring 2019">
<node CREATED="1570438906315" ID="ID_430186735" MODIFIED="1570438909702" POSITION="right" TEXT="Introduction">
<node CREATED="1570440560276" ID="ID_1337668853" MODIFIED="1570440570935" TEXT="Focus: Design of General Purpose Processors">
<node CREATED="1570440586204" ID="ID_218215652" MODIFIED="1570440599705" TEXT="Microprocessors are the basic building block of computer systems">
<node CREATED="1570440600783" ID="ID_1690629587" MODIFIED="1570440615033" TEXT="Understanding them is crucial even if you do not plan to work as a hardware designer"/>
</node>
<node CREATED="1570440629328" ID="ID_895967730" MODIFIED="1570440641810" TEXT="Microprocessors are the most sophisticated digital systems that exist today">
<node CREATED="1570440642728" ID="ID_967091330" MODIFIED="1570440652205" TEXT="Understanding them will help you design all kinds of hardware">
<node CREATED="1570440655888" ID="ID_1836580900" MODIFIED="1570440676530" TEXT="Incorporates many techniques"/>
</node>
</node>
<node CREATED="1570440686858" ID="ID_1564727744" MODIFIED="1570440706291" TEXT="By the end of the term you would have designed many RISC-V processors from scratch!">
<node CREATED="1570440721496" ID="ID_844195657" MODIFIED="1570440726207" TEXT="They will all run the same software"/>
<node CREATED="1570440728062" ID="ID_1132930249" MODIFIED="1570440732118" TEXT="They are different internally">
<node CREATED="1570440735271" ID="ID_1844263077" MODIFIED="1570440737920" TEXT="Efficiency"/>
<node CREATED="1570440744219" ID="ID_1446654160" MODIFIED="1570440746590" TEXT="Low power"/>
</node>
</node>
</node>
<node CREATED="1570440754253" ID="ID_1056706555" MODIFIED="1570440759430" TEXT="General Purpose Processor">
<node CREATED="1570440760187" ID="ID_372541851" MODIFIED="1570440788490" TEXT="It would be highly desirable if the same hardware could execute programs written in Python, Java, C, or for that matter in any high-level language">
<node CREATED="1570440790571" ID="ID_1570998208" MODIFIED="1570440796430" TEXT="Hardware should be universal">
<node CREATED="1570440797251" ID="ID_1917948692" MODIFIED="1570440801009" TEXT="Not just for Python"/>
<node CREATED="1570440814359" ID="ID_1616532564" MODIFIED="1570440821081" TEXT="Should execute any HLL">
<node CREATED="1570440822633" ID="ID_1589308351" MODIFIED="1570440833053" TEXT="We don&apos;t pay attention to low level hardware"/>
</node>
<node CREATED="1570440846661" ID="ID_1353534722" MODIFIED="1570440850810" TEXT="New language should also run"/>
</node>
</node>
<node CREATED="1570440854098" ID="ID_1635547880" MODIFIED="1570440872021" TEXT="It is also not sensible to execute every feature of a high-level language directly in hardware">
<node CREATED="1570440873844" ID="ID_1896835343" MODIFIED="1570440880161" TEXT="Software is better for certain things"/>
<node CREATED="1570440880711" ID="ID_366043341" MODIFIED="1570440887741" TEXT="What is easy to do in hardware"/>
</node>
<node CREATED="1570440898792" ID="ID_1784324012" MODIFIED="1570440904956" TEXT="Machine (Assembly) Language">
<node CREATED="1570440907588" ID="ID_1287046181" MODIFIED="1570440919122" TEXT="Python, Java, C, Scheme, ... compile to this"/>
<node CREATED="1570440920335" ID="ID_342201701" MODIFIED="1570440926053" TEXT="Microprocessor understands this">
<node CREATED="1570440975237" ID="ID_1153911451" MODIFIED="1570440980619" TEXT="Direct Hardware execution"/>
</node>
<node CREATED="1570440930569" ID="ID_1831486247" MODIFIED="1570440937702" TEXT="This is the HW-SW interface">
<node CREATED="1570440942182" ID="ID_1060873901" MODIFIED="1570440947010" TEXT="We need to learn this interface"/>
<node CREATED="1570440950316" ID="ID_664125562" MODIFIED="1570440957324" TEXT="Designed extremely carefully"/>
<node CREATED="1570440962261" ID="ID_169813152" MODIFIED="1570440967232" TEXT="Log or research done"/>
</node>
<node CREATED="1570440984935" ID="ID_1071658058" MODIFIED="1570440991318" TEXT="It should be suitable for HLL">
<node CREATED="1570440997343" ID="ID_1989086146" MODIFIED="1570441002015" TEXT="HLL is translated to LLL"/>
</node>
<node CREATED="1570441041140" ID="ID_438629059" MODIFIED="1570441045885" TEXT="Isolates HLL from Hardware"/>
</node>
</node>
<node CREATED="1570441065333" ID="ID_1933289132" MODIFIED="1570441067558" TEXT="Some facts">
<node CREATED="1570441068348" ID="ID_117929150" MODIFIED="1570441084833" TEXT="All modern electronic computers are digital, i.e, compute with 1s and 0s">
<node CREATED="1570441091939" ID="ID_226628938" MODIFIED="1570441094351" TEXT="More resilient"/>
<node CREATED="1570441094870" ID="ID_581774396" MODIFIED="1570441100254" TEXT="Mathematically more efficient"/>
<node CREATED="1570441104413" ID="ID_1342230519" MODIFIED="1570441107806" TEXT="Good at building it"/>
</node>
<node CREATED="1570441110886" ID="ID_936812600" MODIFIED="1570441127574" TEXT="All the information is converted into binary form and all operations are carried out on these binary forms"/>
<node CREATED="1570441128648" ID="ID_976821889" MODIFIED="1570441151302" TEXT="It is possible to implement simple operations like +, &gt;, AND, etc. on binary numbers in hardware super efficiently">
<node CREATED="1570441155128" ID="ID_1185708097" MODIFIED="1570441165601" TEXT="Hardware is good at doing computations using binary numbers"/>
</node>
<node CREATED="1570441168080" ID="ID_873570276" MODIFIED="1570441201420" TEXT="Technology dictates hardware: if tomorrow silicon-based computers were replaced by DNA-based computers, we will have t oredesign 6.004 from scratch">
<node CREATED="1570441209423" ID="ID_1118515472" MODIFIED="1570441222302" TEXT="Not discussing CMOS or low level technology">
<node CREATED="1570441223590" ID="ID_1085487675" MODIFIED="1570441249990" TEXT="But this dictates the design principles">
<node CREATED="1570441298349" ID="ID_538806252" MODIFIED="1570441324364" TEXT="Silicon technolgoy has dictated all computing design thinking"/>
</node>
<node CREATED="1570441353048" ID="ID_58855707" MODIFIED="1570441356184" TEXT="Extremely reliable"/>
<node CREATED="1570441356552" ID="ID_692225537" MODIFIED="1570441371395" TEXT="Extremely resilient"/>
</node>
<node CREATED="1570441252565" ID="ID_1491871574" MODIFIED="1570441272996" TEXT="Suppose that there is a revolution in technolgy">
<node CREATED="1570441274781" ID="ID_130353940" MODIFIED="1570441277708" TEXT="DNA">
<node CREATED="1570441280509" ID="ID_1484961441" MODIFIED="1570441290443" TEXT="The structure of computers may look very different"/>
</node>
</node>
<node CREATED="1570441382269" ID="ID_60292025" MODIFIED="1570441387949" TEXT="Assume the computers are silicon based"/>
</node>
</node>
<node CREATED="1570441394692" ID="ID_1650631459" MODIFIED="1570441399897" TEXT="Components of a MicroProcessor">
<node CREATED="1570441401191" ID="ID_1731703185" MODIFIED="1570441403701" TEXT="Register File">
<node CREATED="1570441414003" ID="ID_1314221325" MODIFIED="1570441418760" TEXT="x0, x1, x2, ....">
<node CREATED="1570441419296" ID="ID_493710" MODIFIED="1570441427441" TEXT="hold 32-bit &quot;words&quot; (numbers)"/>
</node>
</node>
<node CREATED="1570441432863" ID="ID_113689520" MODIFIED="1570441436945" TEXT="Connected to an ALU">
<node CREATED="1570441437714" ID="ID_576986071" MODIFIED="1570441441859" TEXT="Arithmetic Logic Unit">
<node CREATED="1570441442825" ID="ID_263660961" MODIFIED="1570441448760" TEXT="Performs Binary operations">
<node CREATED="1570441449134" ID="ID_1482316028" MODIFIED="1570441450538" TEXT="Logical">
<node CREATED="1570441455376" ID="ID_710102820" MODIFIED="1570441457377" TEXT="Comparison"/>
</node>
<node CREATED="1570441458138" ID="ID_862101018" MODIFIED="1570441460489" TEXT="Arithmetic"/>
</node>
</node>
<node CREATED="1570441471849" ID="ID_790849438" MODIFIED="1570441481658" TEXT="Simplistic view">
<node CREATED="1570441481853" ID="ID_1314852376" MODIFIED="1570441486535" TEXT="We take numbers from register file"/>
<node CREATED="1570441486904" ID="ID_1141067251" MODIFIED="1570441497078" TEXT="We compute results in ALU"/>
<node CREATED="1570441497288" ID="ID_167990084" MODIFIED="1570441504998" TEXT="We store numbers back in register file"/>
</node>
<node CREATED="1570441566215" ID="ID_1075031080" MODIFIED="1570441576973" TEXT="Modern computers can have 16 registers in the file"/>
</node>
<node CREATED="1570441537842" ID="ID_1948930925" MODIFIED="1570441540058" TEXT="Calculator">
<node CREATED="1570441540282" ID="ID_225958339" MODIFIED="1570441544244" TEXT="1 or 2 registers"/>
</node>
<node CREATED="1570441638031" ID="ID_1529984921" MODIFIED="1570441641526" TEXT="Main Memory">
<node CREATED="1570441642762" ID="ID_1276208412" MODIFIED="1570441649941" TEXT="32-bit &quot;words&quot;">
<node CREATED="1570441656231" ID="ID_1880768617" MODIFIED="1570441665106" TEXT="This is line notes after calculator is operated"/>
</node>
<node CREATED="1570441674892" ID="ID_138073286" MODIFIED="1570441676556" TEXT="Very large">
<node CREATED="1570441680043" ID="ID_789939531" MODIFIED="1570441689812" TEXT="Assume infinite theoretically"/>
</node>
<node CREATED="1570441698587" ID="ID_1873977842" MODIFIED="1570441704521" TEXT="Holds program and data">
<node CREATED="1570441705986" ID="ID_812068960" MODIFIED="1570441707508" TEXT="program">
<node CREATED="1570441707682" ID="ID_1427580687" MODIFIED="1570441712948" TEXT="instructions">
<node CREATED="1570441721669" ID="ID_1026466200" MODIFIED="1570441728572" TEXT="they are just bits"/>
</node>
</node>
</node>
<node CREATED="1570441775127" ID="ID_1052100855" MODIFIED="1570441780898" TEXT="This is not used to compute">
<node CREATED="1570441781568" ID="ID_684834174" MODIFIED="1570441793310" TEXT="Data is moved back and forth between MM and Register file">
<node CREATED="1570441835916" ID="ID_1548775862" MODIFIED="1570441841940" TEXT="Instructions to do this exist"/>
</node>
</node>
</node>
<node CREATED="1570441858786" ID="ID_1689695287" MODIFIED="1570441862050" TEXT="Program">
<node CREATED="1570441862294" ID="ID_1760717884" MODIFIED="1570441870657" TEXT="Always assumes this abstract view of the machine">
<node CREATED="1570441900164" ID="ID_889738130" MODIFIED="1570441906502" TEXT="Low level programming">
<node CREATED="1570441918914" ID="ID_635506014" MODIFIED="1570441922138" TEXT="Hardware dependent"/>
</node>
</node>
</node>
</node>
<node CREATED="1570441933351" ID="ID_380327226" MODIFIED="1570441942827" TEXT="MicroProcessor Structure/ Assembly Language">
<node CREATED="1570441943302" ID="ID_1941636984" MODIFIED="1570441950796" TEXT="Each register is of fixed size, say 32 bits"/>
<node CREATED="1570441951383" ID="ID_1956651151" MODIFIED="1570441959320" TEXT="The number of registers are small, say 32"/>
<node CREATED="1570441959660" ID="ID_1049111252" MODIFIED="1570441973918" TEXT="ALU directly performs operations on the register file, typically">
<node CREATED="1570441974411" ID="ID_661001481" MODIFIED="1570441999734" TEXT="xi &lt;- Op(xj, xk) where Op belongs to {+, AND, OR, &lt;, &gt;, ...}">
<node CREATED="1570442010008" ID="ID_1667747429" MODIFIED="1570442014350" TEXT="2 dozen"/>
</node>
</node>
<node CREATED="1570442024559" ID="ID_742601989" MODIFIED="1570442036639" TEXT="Memory is large, say Giga bytes, and holds program and data"/>
<node CREATED="1570442042833" ID="ID_217450653" MODIFIED="1570442058951" TEXT="Data can be moved back and forth between memory and Register File">
<node CREATED="1570442059577" ID="ID_1543421079" MODIFIED="1570442064057" TEXT="Ld x M[a]">
<node CREATED="1570442070578" ID="ID_1318022304" MODIFIED="1570442076470" TEXT="move from memory to register"/>
</node>
<node CREATED="1570442064379" ID="ID_1652637547" MODIFIED="1570442068121" TEXT="St M[a] x">
<node CREATED="1570442077370" ID="ID_156241058" MODIFIED="1570442086084" TEXT="move from register to memory"/>
</node>
</node>
</node>
<node CREATED="1570442089330" ID="ID_1184711449" MODIFIED="1570442096813" TEXT="Assembly (Machine) Language Program">
<node CREATED="1570442100105" ID="ID_1687551970" MODIFIED="1570442134612" TEXT="An assembly language program is a sequence of instructions which execute in a sequential order unless a control transfer instruction is executed"/>
<node CREATED="1570442178641" ID="ID_1241005879" MODIFIED="1570442189794" TEXT="Each instruction specifies one of the following operations:">
<node CREATED="1570442190009" ID="ID_1922395276" MODIFIED="1570442198402" TEXT="ALU or Reg-to-Reg operation"/>
<node CREATED="1570442199547" ID="ID_293047484" MODIFIED="1570442200298" TEXT="Ld"/>
<node CREATED="1570442200897" ID="ID_98492153" MODIFIED="1570442201722" TEXT="St"/>
<node CREATED="1570442201987" ID="ID_1964184000" MODIFIED="1570442217386" TEXT="Control transfer operation: e.g. xi &lt; xj go to label l">
<node CREATED="1570442290902" ID="ID_69855410" MODIFIED="1570442300263" TEXT="A label is assigned to an instruction"/>
</node>
</node>
</node>
<node CREATED="1570442317921" ID="ID_1939539702" MODIFIED="1570442322621" TEXT="Program to sum array elements">
<node CREATED="1570442323648" ID="ID_1860996217" MODIFIED="1570442340651" TEXT="sum = a[0] + a[1] + a[2] + ... + a[n-1]">
<node CREATED="1570442357943" ID="ID_1626844528" MODIFIED="1570442362067" TEXT="It is stored in memory">
<node CREATED="1570442378231" ID="ID_1173890986" MODIFIED="1570442382318" TEXT="Where is the array stored?">
<node CREATED="1570442382526" ID="ID_436016427" MODIFIED="1570442385119" TEXT="base address">
<node CREATED="1570442385357" ID="ID_805171797" MODIFIED="1570442386479" TEXT="100">
<node CREATED="1570442400922" ID="ID_540486701" MODIFIED="1570442404128" TEXT="pointer to a[0]"/>
<node CREATED="1570442436230" ID="ID_1027791368" MODIFIED="1570442438062" TEXT="address"/>
</node>
</node>
<node CREATED="1570442405767" ID="ID_830381611" MODIFIED="1570442408336" TEXT="n">
<node CREATED="1570442408577" ID="ID_202443843" MODIFIED="1570442410800" TEXT="104">
<node CREATED="1570442429534" ID="ID_55628637" MODIFIED="1570442430941" TEXT="address"/>
</node>
</node>
<node CREATED="1570442412177" ID="ID_231592644" MODIFIED="1570442414601" TEXT="sum">
<node CREATED="1570442414818" ID="ID_1359691152" MODIFIED="1570442416673" TEXT="108">
<node CREATED="1570442431743" ID="ID_1922035926" MODIFIED="1570442433086" TEXT="address"/>
</node>
</node>
</node>
</node>
<node CREATED="1570442457653" ID="ID_455619156" MODIFIED="1570442461155" TEXT="Register file">
<node CREATED="1570442461364" ID="ID_623183449" MODIFIED="1570442463434" TEXT="x1">
<node CREATED="1570442464389" ID="ID_1388691330" MODIFIED="1570442465211" TEXT="base">
<node CREATED="1570442532512" ID="ID_1674823165" MODIFIED="1570442542016" TEXT="load(Mem[x10])"/>
</node>
</node>
<node CREATED="1570442465922" ID="ID_1733019166" MODIFIED="1570442467427" TEXT="x2">
<node CREATED="1570442467604" ID="ID_1370896681" MODIFIED="1570442468331" TEXT="n">
<node CREATED="1570442548295" ID="ID_1806179471" MODIFIED="1570442557616" TEXT="load(Mem[x10 + 4])"/>
</node>
</node>
<node CREATED="1570442469097" ID="ID_1065727159" MODIFIED="1570442471595" TEXT="x3">
<node CREATED="1570442471767" ID="ID_134920011" MODIFIED="1570442473212" TEXT="sum">
<node CREATED="1570442560623" ID="ID_1415090213" MODIFIED="1570442566569" TEXT="load(Mem[x10 + 8])"/>
</node>
</node>
<node CREATED="1570442474267" ID="ID_752994259" MODIFIED="1570442476147" TEXT="x10">
<node CREATED="1570442476440" ID="ID_1502363575" MODIFIED="1570442478172" TEXT="100"/>
</node>
</node>
<node CREATED="1570442633338" ID="ID_1744141932" MODIFIED="1570442638216" TEXT="Program">
<node CREATED="1570442639287" ID="ID_1806868588" MODIFIED="1570442883953">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      loop:
    </p>
    <p>
      x4 &lt;- load(Mem[x1])
    </p>
    <p>
      add x3, x3, x4
    </p>
    <p>
      add x1, x1, 4
    </p>
    <p>
      addi x2, x2, -1
    </p>
    <p>
      bnez x2, loop
    </p>
    <p>
      
    </p>
    <p>
      store(Mem[x10 + 8]) &lt;- x3
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1570442903926" ID="ID_1820555952" MODIFIED="1570442928699" TEXT="In assembly language all data movement is in our hands">
<node CREATED="1570442947789" ID="ID_1785539033" MODIFIED="1570442956704" TEXT="Translators translate to this from HLL"/>
</node>
</node>
<node CREATED="1570442970066" ID="ID_77875812" MODIFIED="1570442983932" TEXT="High Level vs Assembly Language">
<node CREATED="1570442984104" ID="ID_1592845903" MODIFIED="1570442989193" TEXT="High Level Language">
<node CREATED="1570442995186" ID="ID_76983591" MODIFIED="1570443002431" TEXT="Primitive Arithmetic and logical operations"/>
<node CREATED="1570443004035" ID="ID_1057673455" MODIFIED="1570443012684" TEXT="Complex data types and data structures">
<node CREATED="1570443026139" ID="ID_1014011930" MODIFIED="1570443027458" TEXT="Arrays"/>
<node CREATED="1570443027690" ID="ID_1070400167" MODIFIED="1570443028546" TEXT="Lists"/>
<node CREATED="1570443028771" ID="ID_1333297783" MODIFIED="1570443029826" TEXT="Graphs"/>
<node CREATED="1570443030050" ID="ID_608198008" MODIFIED="1570443031058" TEXT="Trees"/>
<node CREATED="1570443033051" ID="ID_471880433" MODIFIED="1570443033842" TEXT="..."/>
</node>
<node CREATED="1570443044528" ID="ID_1798973139" MODIFIED="1570443073731" TEXT="Complex control structures - Conditional statements, loops and procedures">
<node CREATED="1570443148426" ID="ID_1800945190" MODIFIED="1570443152030" TEXT="Loops are important">
<node CREATED="1570443152429" ID="ID_1900802713" MODIFIED="1570443162994" TEXT="Repeated computation"/>
</node>
<node CREATED="1570443164066" ID="ID_691451102" MODIFIED="1570443167411" TEXT="Procedure calls">
<node CREATED="1570443171696" ID="ID_1371854539" MODIFIED="1570443180891" TEXT="Most important abstraction HLL">
<node CREATED="1570443187070" ID="ID_963409938" MODIFIED="1570443192851" TEXT="Sort is defined ones"/>
<node CREATED="1570443193107" ID="ID_207126959" MODIFIED="1570443202716" TEXT="Other program uses Sort (without thinking about it)"/>
</node>
</node>
</node>
<node CREATED="1570443216413" ID="ID_1664084569" MODIFIED="1570443224596" TEXT="Not suitable for direct implementation in hardware">
<node CREATED="1570443225038" ID="ID_524314967" MODIFIED="1570443235773" TEXT="It is far removed from hardware"/>
</node>
</node>
<node CREATED="1570442989497" ID="ID_1762551154" MODIFIED="1570442994154" TEXT="Assembly Language">
<node CREATED="1570443253681" ID="ID_495490517" MODIFIED="1570443261429" TEXT="Primitive Arithmetic and logical operations"/>
<node CREATED="1570443261811" ID="ID_407825886" MODIFIED="1570443270450" TEXT="Primitive data structures - bits and integers">
<node CREATED="1570443278420" ID="ID_1103357127" MODIFIED="1570443283212" TEXT="Emulate data structures"/>
</node>
<node CREATED="1570443286337" ID="ID_33549885" MODIFIED="1570443291800" TEXT="Control transfer instructions"/>
<node CREATED="1570443325100" ID="ID_986305033" MODIFIED="1570443335977" TEXT="Designed to be directly implementable in hardware">
<node CREATED="1570443344925" ID="ID_391094678" MODIFIED="1570443347845" TEXT="Issues">
<node CREATED="1570443348374" ID="ID_1714386819" MODIFIED="1570443358214" TEXT="Is it suitable for implementing in hardware"/>
<node CREATED="1570443359101" ID="ID_79726943" MODIFIED="1570443366837" TEXT="Do I know how to translate HLL to LLL"/>
</node>
</node>
<node CREATED="1570443383204" ID="ID_537690878" MODIFIED="1570443389986" TEXT="Tedious programming!"/>
</node>
</node>
<node CREATED="1570443402488" ID="ID_708500437" MODIFIED="1570443407098" TEXT="The course outline">
<node CREATED="1570443407738" ID="ID_382613591" MODIFIED="1570443409689" TEXT="Module1">
<node CREATED="1570443410032" ID="ID_1469997945" MODIFIED="1570443419063" TEXT="Binary representation and operations"/>
<node CREATED="1570443419384" ID="ID_823845647" MODIFIED="1570443423905" TEXT="RISC-V ISA">
<node CREATED="1570443443990" ID="ID_1589716235" MODIFIED="1570443447344" TEXT="Open source"/>
<node CREATED="1570443449158" ID="ID_932720776" MODIFIED="1570443452896" TEXT="x86">
<node CREATED="1570443453097" ID="ID_437822652" MODIFIED="1570443457264" TEXT="copyright issue"/>
</node>
</node>
<node CREATED="1570443425233" ID="ID_580929503" MODIFIED="1570443439085" TEXT="Assembly language programming in RISC-V"/>
<node CREATED="1570443462064" ID="ID_1932415182" MODIFIED="1570443471365" TEXT="Expressing high-level programming in assembly language"/>
<node CREATED="1570443471666" ID="ID_822948000" MODIFIED="1570443475807" TEXT="Procedure calling convention"/>
</node>
<node CREATED="1570443479963" ID="ID_1477674741" MODIFIED="1570443482089" TEXT="Module2">
<node CREATED="1570443482433" ID="ID_479804054" MODIFIED="1570443487011" TEXT="Digital abstraction"/>
<node CREATED="1570443487994" ID="ID_801806475" MODIFIED="1570443496697" TEXT="Boolean algebra and combinational logic"/>
<node CREATED="1570443497255" ID="ID_1607056170" MODIFIED="1570443500521" TEXT="Sequential logic"/>
<node CREATED="1570443500888" ID="ID_1783350127" MODIFIED="1570443520041" TEXT="Expressing logic designs in Bluespec, a modern hardware design language"/>
<node CREATED="1570443512295" ID="ID_95657210" MODIFIED="1570443526350" TEXT="Logic synthesis">
<node CREATED="1570443537801" ID="ID_139597780" MODIFIED="1570443547152" TEXT="Bluespec is based on modern language design principles">
<node CREATED="1570443552607" ID="ID_1033868415" MODIFIED="1570443559225" TEXT="Nees hardware model in the head">
<node CREATED="1570443560425" ID="ID_1641827634" MODIFIED="1570443614959" TEXT="Produces circuits"/>
</node>
</node>
</node>
<node CREATED="1570443527273" ID="ID_875064645" MODIFIED="1570443533929" TEXT="Pipelined and folded circuits"/>
</node>
<node CREATED="1570443621391" ID="ID_1890498344" MODIFIED="1570443627637" TEXT="Module3">
<node CREATED="1570443628484" ID="ID_1759737136" MODIFIED="1570443638134" TEXT="Implement non-pipelined RISC-V computer">
<node CREATED="1570444254881" ID="ID_1814318657" MODIFIED="1570444288687" TEXT="We can build computers that execute any program in RISC-V assembly">
<node CREATED="1570444288954" ID="ID_43597157" MODIFIED="1570444296965" TEXT="Python can be translated to RISC-V"/>
</node>
</node>
<node CREATED="1570443638550" ID="ID_1434976704" MODIFIED="1570443639725" TEXT="Caches"/>
<node CREATED="1570443639955" ID="ID_1245599101" MODIFIED="1570443648669" TEXT="Implement Pipelined RISC-V computers">
<node CREATED="1570443650362" ID="ID_1106165189" MODIFIED="1570443658312" TEXT="control and data hazards, bypasses"/>
</node>
<node CREATED="1570443659423" ID="ID_1943214848" MODIFIED="1570443665797" TEXT="Branch prediction (time permitting)"/>
</node>
<node CREATED="1570444303572" ID="ID_276916094" MODIFIED="1570444306269" TEXT="Module4">
<node CREATED="1570444306590" ID="ID_398819205" MODIFIED="1570444310671" TEXT="Operating Systems">
<node CREATED="1570444322632" ID="ID_1275056040" MODIFIED="1570444329671" TEXT="Hardware becomes more usable"/>
<node CREATED="1570444339349" ID="ID_1919505529" MODIFIED="1570444346599" TEXT="This needs to know about software and hardware"/>
</node>
<node CREATED="1570444311392" ID="ID_195941141" MODIFIED="1570444318471" TEXT="I/O interrupts and exceptions"/>
<node CREATED="1570444318726" ID="ID_811481144" MODIFIED="1570444321269" TEXT="Virtual memory"/>
</node>
<node CREATED="1570444349364" ID="ID_954125119" MODIFIED="1570444351499" TEXT="Module5">
<node CREATED="1570444351772" ID="ID_915043142" MODIFIED="1570444386212" TEXT="Parallel programming and multicore issues - synchronization, cache coherence, ..."/>
</node>
</node>
<node CREATED="1570444405396" ID="ID_653156633" MODIFIED="1570444412393" TEXT="We rely on Modern Design Tools">
<node CREATED="1570444414150" ID="ID_673748497" MODIFIED="1570444421403" TEXT="Bluespec SystemVerilog Design Flow">
<node CREATED="1570444429749" ID="ID_1449439082" MODIFIED="1570444438746" TEXT="Code is written in Bluespec">
<node CREATED="1570444439213" ID="ID_1805096997" MODIFIED="1570444453767" TEXT="Compiler translates it into circuit that can simulate"/>
<node CREATED="1570444461932" ID="ID_1745286335" MODIFIED="1570444471288" TEXT="Compiler translates into gates">
<node CREATED="1570444471653" ID="ID_617835788" MODIFIED="1570444474597" TEXT="FPGAs"/>
<node CREATED="1570444475554" ID="ID_1213565927" MODIFIED="1570444480477" TEXT="Issue to factories">
<node CREATED="1570444481828" ID="ID_1026604567" MODIFIED="1570444485828" TEXT="for manufacturing"/>
</node>
</node>
</node>
</node>
<node CREATED="1570444500068" ID="ID_669592272" MODIFIED="1570444526157" TEXT="Designs are always expressed in a high-level programming language, which is compiled to generate circuit descriptions">
<node CREATED="1570444544561" ID="ID_74878267" MODIFIED="1570444551892" TEXT="Billions of gates are generated automatically"/>
</node>
</node>
<node CREATED="1570444559421" ID="ID_314150337" MODIFIED="1570444573323" TEXT="RISC-V using Bluespec and Yosys Synthesis ">
<node CREATED="1570444580873" ID="ID_320264730" MODIFIED="1570444586348" TEXT="Processor Design">
<node CREATED="1570444586604" ID="ID_1914493644" MODIFIED="1570444589596" TEXT="2Stage"/>
<node CREATED="1570444589908" ID="ID_983757927" MODIFIED="1570444593979" TEXT="2StagePlus"/>
<node CREATED="1570444595069" ID="ID_513301648" MODIFIED="1570444597788" TEXT="2StageDS"/>
<node CREATED="1570444598051" ID="ID_1102640165" MODIFIED="1570444602147" TEXT="2StageEhr"/>
<node CREATED="1570444602877" ID="ID_391991988" MODIFIED="1570444605500" TEXT="3Stage"/>
<node CREATED="1570444605725" ID="ID_1854202252" MODIFIED="1570444608804" TEXT="3StageEhr"/>
<node CREATED="1570444609035" ID="ID_169838594" MODIFIED="1570444615420" TEXT="3StageBypasses"/>
<node CREATED="1570444618998" ID="ID_760666101" MODIFIED="1570444626940" TEXT="3StageBypassesBTB"/>
<node CREATED="1570444627333" ID="ID_698234779" MODIFIED="1570444635037" TEXT="3StageBypassesEhr"/>
<node CREATED="1570444635969" ID="ID_1115956151" MODIFIED="1570444644245" TEXT="3StageBypassesEhrBTB"/>
<node CREATED="1570444644702" ID="ID_469605697" MODIFIED="1570444647629" TEXT="4Stage"/>
<node CREATED="1570444647860" ID="ID_886451773" MODIFIED="1570444653653" TEXT="4StageBypasses"/>
<node CREATED="1570444653891" ID="ID_923477628" MODIFIED="1570444663620" TEXT="4Stage2Bypasses"/>
<node CREATED="1570444663868" ID="ID_1815865961" MODIFIED="1570444671393" TEXT="4rStage2BypassesBTB"/>
<node CREATED="1570444671647" ID="ID_964104860" MODIFIED="1570444681637" TEXT="4Stage2BypassesEhrBTB"/>
</node>
</node>
<node CREATED="1570444707502" ID="ID_711521886" MODIFIED="1570444710454" TEXT="Course Mechanics">
<node CREATED="1570444713875" ID="ID_838690478" MODIFIED="1570444724727" TEXT="Use the course website: http://6004.mit.edu">
<node CREATED="1570444726243" ID="ID_1396346231" MODIFIED="1570444739641" TEXT="It has up-to-date information, handouts, and references to supplemental reading"/>
</node>
<node CREATED="1570444740704" ID="ID_527387636" MODIFIED="1570444748351" TEXT="Use Piazza extensively">
<node CREATED="1570444748623" ID="ID_1594902064" MODIFIED="1570444759479" TEXT="piazza.com/mit/spring2019/6004">
<node CREATED="1570444760534" ID="ID_1061891584" MODIFIED="1570444764559" TEXT="Sign up"/>
<node CREATED="1570444764806" ID="ID_429488763" MODIFIED="1570444773763" TEXT="course announcements"/>
<node CREATED="1570444774971" ID="ID_384084018" MODIFIED="1570444783424" TEXT="fastest way to get questions answered"/>
<node CREATED="1570444783650" ID="ID_767587525" MODIFIED="1570444792972" TEXT="fill out poll about lecture handouts"/>
</node>
</node>
<node CREATED="1570444981286" ID="ID_1485982960" MODIFIED="1570444985069" TEXT="Course Logistics">
<node CREATED="1570444985699" ID="ID_968195597" MODIFIED="1570445000679" TEXT="2 lectures/week: handouts, videos, and reference materials on website"/>
<node CREATED="1570445002139" ID="ID_191949531" MODIFIED="1570445020983" TEXT="2 recitations/week: work through tutorial problems using skills and concepts from previous lecture"/>
<node CREATED="1570445021447" ID="ID_1287999031" MODIFIED="1570445027133" TEXT="8 mandatory lab exercices">
<node CREATED="1570445027490" ID="ID_296093598" MODIFIED="1570445035024" TEXT="online submission + check-off meetings in lab"/>
<node CREATED="1570445036037" ID="ID_733168170" MODIFIED="1570445061309" TEXT="Due throughout the term (7 free late days meant to covershort illnesses etc., see website)"/>
</node>
<node CREATED="1570445063433" ID="ID_113333007" MODIFIED="1570445071174" TEXT="One open-ended design project"/>
<node CREATED="1570445075142" ID="ID_1803697301" MODIFIED="1570445078141" TEXT="3 quizzes"/>
</node>
<node CREATED="1570445093440" ID="ID_478458000" MODIFIED="1570445104129" TEXT="10 recitation sections"/>
</node>
</node>
<node CREATED="1570438911792" ID="ID_554215305" MODIFIED="1570438917367" POSITION="left" TEXT="RISC-V Assembly">
<node CREATED="1570897303328" ID="ID_1566426452" MODIFIED="1570897310738" TEXT="3 main components">
<node CREATED="1570897311070" ID="ID_297466480" MODIFIED="1570897314322" TEXT="ALU">
<node CREATED="1570897322533" ID="ID_851870583" MODIFIED="1570897345287" TEXT="Gets source operands from registers (never reads from memory), computes and stores back in register file"/>
<node CREATED="1570897431654" ID="ID_1498357650" MODIFIED="1570897433398" TEXT="Assembly">
<node CREATED="1570897434460" ID="ID_558369734" MODIFIED="1570897436576" TEXT="Instructions">
<node CREATED="1570897436871" ID="ID_1611664528" MODIFIED="1570897449858" TEXT="Tells what the processor architecture looks like"/>
</node>
</node>
</node>
<node CREATED="1570897314597" ID="ID_1066267505" MODIFIED="1570897316832" TEXT="Register file">
<node CREATED="1570897387796" ID="ID_231979743" MODIFIED="1570897403867" TEXT="Instructions to load and store from memory"/>
<node CREATED="1570897411644" ID="ID_366915815" MODIFIED="1570897415893" TEXT="fast and small in size"/>
</node>
<node CREATED="1570897317077" ID="ID_281578565" MODIFIED="1570897320172" TEXT="Main Memory">
<node CREATED="1570897404933" ID="ID_732258646" MODIFIED="1570897409710" TEXT="Slow and large in size"/>
</node>
</node>
<node CREATED="1570897456463" ID="ID_657825047" MODIFIED="1570897457606" TEXT="ISA">
<node CREATED="1570897458436" ID="ID_1455057028" MODIFIED="1570897474399" TEXT="The contract between software and hardware">
<node CREATED="1570897474685" ID="ID_830312534" MODIFIED="1570897490791" TEXT="Functional definition of operations and storage locations">
<node CREATED="1570897524585" ID="ID_950857136" MODIFIED="1570897530288" TEXT="What the circuit is going to do"/>
</node>
<node CREATED="1570897492998" ID="ID_1775522780" MODIFIED="1570897508844" TEXT="Precise description of how software can invoke and access them"/>
</node>
<node CREATED="1570897540264" ID="ID_235414865" MODIFIED="1570897545464" TEXT="RISC-V ISA:">
<node CREATED="1570897546704" ID="ID_1314215296" MODIFIED="1570897555510" TEXT="A new, open, free ISA from Berkeley"/>
<node CREATED="1570897559952" ID="ID_1957252855" MODIFIED="1570897565542" TEXT="There are several variants">
<node CREATED="1570897565861" ID="ID_247127568" MODIFIED="1570897580443" TEXT="RV32, RV64, RV128: Different data widths"/>
<node CREATED="1570897582793" ID="ID_818769600" MODIFIED="1570897591872" TEXT="I: Base Integer instructions">
<node CREATED="1570897627672" ID="ID_251960631" MODIFIED="1570897630339" TEXT="Integer version"/>
</node>
<node CREATED="1570897592785" ID="ID_996761393" MODIFIED="1570897599248" TEXT="M: Multiply and Divide">
<node CREATED="1570897646761" ID="ID_1119508444" MODIFIED="1570897650833" TEXT="Some with these"/>
</node>
<node CREATED="1570897600065" ID="ID_1820445781" MODIFIED="1570897617489" TEXT="F and D: Single-and Double-precision floating point">
<node CREATED="1570897632744" ID="ID_145948621" MODIFIED="1570897642775" TEXT="Additional support for some of them"/>
</node>
<node CREATED="1570897619935" ID="ID_55738212" MODIFIED="1570897620658" TEXT="..."/>
</node>
<node CREATED="1570897664618" ID="ID_285953423" MODIFIED="1570897686802" TEXT="We will design RV32I processor, which is the base integer 32-bit variant"/>
<node CREATED="1570897707488" ID="ID_1328435930" MODIFIED="1570897718729" TEXT="RISC-V Processor Storage">
<node CREATED="1570897720850" ID="ID_200683293" MODIFIED="1570897722866" TEXT="Registers">
<node CREATED="1570897723939" ID="ID_1306858293" MODIFIED="1570897732306" TEXT="32 General Purpose Registers"/>
<node CREATED="1570897734642" ID="ID_1716518449" MODIFIED="1570897744433" TEXT="Each register is 32 bits wide">
<node CREATED="1570897762085" ID="ID_302863246" MODIFIED="1570897765465" TEXT="1024 bits"/>
</node>
<node CREATED="1570897767768" ID="ID_320515082" MODIFIED="1570897771945" TEXT="x0 = 0">
<node CREATED="1570908370189" ID="ID_1942934563" MODIFIED="1570908377138" TEXT="Read returns 0"/>
<node CREATED="1570908377414" ID="ID_582379852" MODIFIED="1570908381341" TEXT="Write doesn&apos;t change it"/>
</node>
</node>
<node CREATED="1570897779250" ID="ID_1879714218" MODIFIED="1570897781905" TEXT="Memory">
<node CREATED="1570897786329" ID="ID_1020822758" MODIFIED="1570897799609" TEXT="Each memory location is 32 bits wide (1 word)"/>
<node CREATED="1570897800024" ID="ID_422778141" MODIFIED="1570897808721" TEXT="Memory is byte (8 bits) addressable"/>
<node CREATED="1570897809942" ID="ID_426495785" MODIFIED="1570897819834" TEXT="Address of adjacent words are 4 apart"/>
<node CREATED="1570897826089" ID="ID_300035500" MODIFIED="1570897830506" TEXT="Address is 32 bits"/>
<node CREATED="1570897831329" ID="ID_435584334" MODIFIED="1570897843621" TEXT="Can address 2^32 bytes or 2^30 words">
<node CREATED="1570908479212" ID="ID_1532233971" MODIFIED="1570908486124" TEXT="byte - 8 bits"/>
<node CREATED="1570908494571" ID="ID_1682690416" MODIFIED="1570908499226" TEXT="word - 32 bits"/>
</node>
</node>
</node>
<node CREATED="1570908574579" ID="ID_188674811" MODIFIED="1570908581055" TEXT="RISC-V ISA: Instructions">
<node CREATED="1570908581974" ID="ID_1141993359" MODIFIED="1570908586747" TEXT="Three types of operations">
<node CREATED="1570908588280" ID="ID_1117773291" MODIFIED="1570908599264" TEXT="Computational: Perform arithmetic and logical operations on registers">
<node CREATED="1570908674178" ID="ID_1953325131" MODIFIED="1570908691259" TEXT="Arithmetic, comparison, logical, and shift operations">
<node CREATED="1570908697915" ID="ID_498299317" MODIFIED="1570908704827" TEXT="Register-register instructions:">
<node CREATED="1570908705088" ID="ID_865560651" MODIFIED="1570908713602" TEXT="2 source operand registers"/>
<node CREATED="1570908714748" ID="ID_1948414543" MODIFIED="1570908726404" TEXT="1 destination register"/>
</node>
<node CREATED="1570908734820" ID="ID_1674827981" MODIFIED="1570908737035" TEXT="Arithmetic">
<node CREATED="1570908737293" ID="ID_450229889" MODIFIED="1570908740068" TEXT="add, sub"/>
</node>
<node CREATED="1570908741547" ID="ID_777580025" MODIFIED="1570908746708" TEXT="Comparison">
<node CREATED="1570908747068" ID="ID_1393026023" MODIFIED="1570908752309" TEXT="slt, sltu"/>
</node>
<node CREATED="1570908755254" ID="ID_1352997120" MODIFIED="1570908759116" TEXT="Logical">
<node CREATED="1570908759438" ID="ID_18717350" MODIFIED="1570908763767" TEXT="and, or, xor"/>
</node>
<node CREATED="1570908764819" ID="ID_1981471101" MODIFIED="1570908767012" TEXT="Shifts">
<node CREATED="1570908767502" ID="ID_1541857875" MODIFIED="1570908772348" TEXT="sll, srl, sra"/>
</node>
</node>
<node CREATED="1570908792803" ID="ID_638428239" MODIFIED="1570908794309" TEXT="Format">
<node CREATED="1570908794598" ID="ID_1003618032" MODIFIED="1570908803653" TEXT="oper dest, src1, src2">
<node CREATED="1570908806801" ID="ID_583974025" MODIFIED="1570908812983" TEXT="add x3, x1, x2">
<node CREATED="1570908813269" ID="ID_1459635243" MODIFIED="1570908820166" TEXT="x3 &lt;- x1 + x2"/>
</node>
<node CREATED="1570908825406" ID="ID_869065020" MODIFIED="1570908833359" TEXT="slt x3, x1, x2">
<node CREATED="1570908840745" ID="ID_626296931" MODIFIED="1570908843843" TEXT="Set less than">
<node CREATED="1570908844384" ID="ID_1699954797" MODIFIED="1570908874104" TEXT="If x1 &lt; x2 then x3 &lt;- 1 Else x3 &lt;- 0"/>
</node>
</node>
<node CREATED="1570908879058" ID="ID_922973241" MODIFIED="1570908886122" TEXT="and x3, x1, x2">
<node CREATED="1570908886298" ID="ID_234714859" MODIFIED="1570908895065" TEXT="x3 &lt;- x1 &amp; x2"/>
</node>
<node CREATED="1570908896844" ID="ID_1777617957" MODIFIED="1570908906195" TEXT="sll x3, x1, x2">
<node CREATED="1570908906355" ID="ID_1653317806" MODIFIED="1570908916179" TEXT="x3 &lt;- x1 &lt;&lt; x2"/>
<node CREATED="1570908928697" ID="ID_1819409310" MODIFIED="1570908935019" TEXT="shift left logical"/>
<node CREATED="1570908935753" ID="ID_1583724801" MODIFIED="1570908939660" TEXT="shift right logical"/>
<node CREATED="1570908940129" ID="ID_1682696375" MODIFIED="1570908946212" TEXT="shift right arithmetic"/>
</node>
</node>
</node>
<node CREATED="1570909017535" ID="ID_851990230" MODIFIED="1570909024065" TEXT="comparison">
<node CREATED="1570909024289" ID="ID_1240019345" MODIFIED="1570909036537" TEXT="31 bits are 0s and 32 bit is 1 or 0"/>
</node>
<node CREATED="1570909119284" ID="ID_1216831089" MODIFIED="1570909123043" TEXT="All values are binary">
<node CREATED="1570909123193" ID="ID_394775756" MODIFIED="1570909136667" TEXT="x1 = 00101; x2 = 00011">
<node CREATED="1570909138260" ID="ID_1988918583" MODIFIED="1570909142787" TEXT="add x3, x1, x2">
<node CREATED="1570909143173" ID="ID_1922387345" MODIFIED="1570909164153" TEXT="01000">
<node CREATED="1570909165555" ID="ID_1717372364" MODIFIED="1570909166322" TEXT="8"/>
</node>
</node>
<node CREATED="1570909275453" ID="ID_1971679703" MODIFIED="1570909282226" TEXT="sll x3, x1, x2">
<node CREATED="1570909284367" ID="ID_1843938100" MODIFIED="1570909300909" TEXT="01000">
<node CREATED="1570909336506" ID="ID_597125275" MODIFIED="1570909372260" TEXT="Size of numbers are fixed in computations (due to size of register or memory cell"/>
</node>
</node>
</node>
</node>
<node CREATED="1570909378420" ID="ID_610585029" MODIFIED="1570909384690" TEXT="Binary Modular Arithmetic">
<node CREATED="1570909386610" ID="ID_1017360451" MODIFIED="1570909429085" TEXT="If we use a fixed number of bits, addition and other operations may produce results outside the range that the output can represent (up to 1 extra bit for addition)">
<node CREATED="1570909430683" ID="ID_829315827" MODIFIED="1570909437053" TEXT="This is known as an overflow"/>
</node>
<node CREATED="1570909461255" ID="ID_231878931" MODIFIED="1570909471647" TEXT="Common approach: Ignore the extra bit">
<node CREATED="1570909472559" ID="ID_1561066478" MODIFIED="1570909502105" TEXT="Gives rise to modular arithmetic: With N-bit numbers, equivalent to following all operations with mod 2^N"/>
<node CREATED="1570909502665" ID="ID_416920635" MODIFIED="1570909510395" TEXT="Visually, numbers &quot;wrap around&quot;">
<node CREATED="1570909531247" ID="ID_1059041119" MODIFIED="1570909532688" TEXT="Example">
<node CREATED="1570909532929" ID="ID_564409758" MODIFIED="1570909546113" TEXT="(6 + 5) % mod 2^3">
<node CREATED="1570909612734" ID="ID_54058890" MODIFIED="1570909620665" TEXT="Going around circle clockwise for addition"/>
<node CREATED="1570909621063" ID="ID_1405891861" MODIFIED="1570909634171" TEXT="Going around the circle counter-clockwise for subtraction"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1570908599553" ID="ID_136994777" MODIFIED="1570908613380" TEXT="Loads and Stores: Move data between registers and main memory"/>
<node CREATED="1570908613580" ID="ID_1365844322" MODIFIED="1570908660749" TEXT="Control Flow: Change the execution  order of instructions to support conditional statements and loops"/>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1570438918143" ID="ID_1208728853" MODIFIED="1570438928556" POSITION="right" TEXT="Compiling Code, Procedures, and Stacks"/>
<node CREATED="1570438929303" ID="ID_625812190" MODIFIED="1570438933654" POSITION="left" TEXT="Procedures and MMIO"/>
<node CREATED="1570438934246" ID="ID_1979956756" MODIFIED="1570438937742" POSITION="right" TEXT="Combinational Logic"/>
<node CREATED="1570438938339" ID="ID_1665305302" MODIFIED="1570438948303" POSITION="left" TEXT="Barrel Shifter, Boolean Optimizations, and Logic"/>
<node CREATED="1570438949014" ID="ID_1110080540" MODIFIED="1570438962204" POSITION="right" TEXT="Complex Combinational Circuits in Bluespec"/>
<node CREATED="1570438963519" ID="ID_476333980" MODIFIED="1570438972382" POSITION="left" TEXT="Design Tradeoffs in Arithmetic Circuits">
<node CREATED="1571497978731" ID="ID_1735680288" MODIFIED="1571498012278" TEXT="Algorithmic Tradeoffs in Hardware Design">
<node CREATED="1571498012535" ID="ID_9285260" MODIFIED="1571498029405" TEXT="Each function allows many implementations with widely different delay, area, and power tradeoffs">
<node CREATED="1571498032906" ID="ID_1993461119" MODIFIED="1571498039773" TEXT="Theoreticians get involved"/>
<node CREATED="1571498047273" ID="ID_166528577" MODIFIED="1571498061149" TEXT="It is a multidimensional optimization problem">
<node CREATED="1571498061926" ID="ID_659611389" MODIFIED="1571498066777" TEXT="Minimize area of circuit"/>
<node CREATED="1571498071016" ID="ID_41616865" MODIFIED="1571498079637" TEXT="Minimize delay"/>
<node CREATED="1571498079925" ID="ID_405641937" MODIFIED="1571498088204" TEXT="Minimum Power"/>
</node>
<node CREATED="1571498157796" ID="ID_1884694622" MODIFIED="1571498159868" TEXT="Tradeoffs">
<node CREATED="1571498161974" ID="ID_470460590" MODIFIED="1571498171993" TEXT="Algorithms primarily designed for hardware"/>
</node>
<node CREATED="1571498173908" ID="ID_962785198" MODIFIED="1571498184212" TEXT="High level language is fed into compiler">
<node CREATED="1571498184434" ID="ID_397305504" MODIFIED="1571498190754" TEXT="Compiler does optimization">
<node CREATED="1571498201749" ID="ID_1038486573" MODIFIED="1571498215046" TEXT="A or B are compiled similarly after optimization"/>
<node CREATED="1571498220252" ID="ID_780785411" MODIFIED="1571498228516" TEXT="In practice we need to see if A is better than B"/>
</node>
</node>
<node CREATED="1571498233835" ID="ID_96602932" MODIFIED="1571498249782" TEXT="Choosing the right algorithms is key to optimizing your design">
<node CREATED="1571498257961" ID="ID_1649640042" MODIFIED="1571498271113" TEXT="Tools cannot compensate for an inefficient algorithm (in most cases)]"/>
<node CREATED="1571498276031" ID="ID_1866153125" MODIFIED="1571498280881" TEXT="Just like programming software">
<node CREATED="1571498301303" ID="ID_50176021" MODIFIED="1571498311463" TEXT="Hardware cost model is different from software cost model"/>
</node>
</node>
<node CREATED="1571498315208" ID="ID_1329843366" MODIFIED="1571498323843" TEXT="Case study: Building a better adder">
<node CREATED="1571498386156" ID="ID_1236749268" MODIFIED="1571498392192" TEXT="Faster adder speeds up the whole machine"/>
<node CREATED="1571498397404" ID="ID_1943105475" MODIFIED="1571498405946" TEXT="Ripple-Carry Adder: Simple but slow">
<node CREATED="1571498407370" ID="ID_525470560" MODIFIED="1571498432692" TEXT="Worst-case path: Carry propagation from LSB to MSB, e.g. when adding 11...111 to 00..001">
<node CREATED="1571503537354" ID="ID_117943536" MODIFIED="1571503542713" TEXT="n-1 propagation delay">
<node CREATED="1571503553360" ID="ID_213201125" MODIFIED="1571503578205" TEXT="t_PD = (n-1)*t_PD,CI-&gt;CO + t_PD,CI-&gt;S">
<node CREATED="1571503578539" ID="ID_597968753" MODIFIED="1571503582195" TEXT="O(n)">
<node CREATED="1571503583089" ID="ID_932827828" MODIFIED="1571503584418" TEXT="delay"/>
<node CREATED="1571503588333" ID="ID_144694480" MODIFIED="1571503628865" TEXT="O(n) is read &quot;order n&quot; and tells us that latency of our adder grows linearly with the number of bits of the operands"/>
</node>
</node>
</node>
</node>
<node CREATED="1571503643759" ID="ID_1962203052" MODIFIED="1571503648591" TEXT="Asymptotic Analysis">
<node CREATED="1571503649375" ID="ID_1485650780" MODIFIED="1571503660521" TEXT="Suppose some computation takes n^2 + 2n + 3 steps">
<node CREATED="1571503662313" ID="ID_628894056" MODIFIED="1571503676654" TEXT="We say O(n^2) (read &quot;is of order n^2&quot;) steps">
<node CREATED="1571503677642" ID="ID_52106947" MODIFIED="1571503694220" TEXT="because 2n^2 &gt; n^2 + 2n + 3 &gt; n^2">
<node CREATED="1571503696862" ID="ID_1748750661" MODIFIED="1571503708192" TEXT="Except for few small integers (1, 2, and 3)"/>
</node>
<node CREATED="1571503713927" ID="ID_1269081121" MODIFIED="1571503766961" TEXT="Formally, g(n) = Theta(f(n)) iff there exist C2 &gt;= C1 &gt; 0 such that for all but finitely many integers n &gt;= 0, C2.f(n) &gt;= g(n) &gt;= C1.f(n)">
<node CREATED="1571503774811" ID="ID_1367032935" MODIFIED="1571503783698" TEXT="Theta(...) implies both inequalities"/>
<node CREATED="1571503784627" ID="ID_1286571538" MODIFIED="1571503792290" TEXT="O(...) implies only the first"/>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1571503828067" ID="ID_1999510776" MODIFIED="1571503838105" TEXT="Carry-Select Adder Trades Area for Speed"/>
</node>
</node>
<node CREATED="1571498102290" ID="ID_1646381067" MODIFIED="1571498106810" TEXT="Flow">
<node CREATED="1571498107059" ID="ID_1475371728" MODIFIED="1571498111228" TEXT="1. Problem"/>
<node CREATED="1571498111712" ID="ID_689794301" MODIFIED="1571498117859" TEXT="2. Harware Designer"/>
<node CREATED="1571498118739" ID="ID_1521195312" MODIFIED="1571498127391" TEXT="3. High-level circut description"/>
<node CREATED="1571498128391" ID="ID_473671885" MODIFIED="1571498135725" TEXT="4. Synthesis tool"/>
<node CREATED="1571498136642" ID="ID_30423577" MODIFIED="1571498145095" TEXT="5. Optimized circuit implementation"/>
</node>
</node>
</node>
<node CREATED="1570438974087" ID="ID_1362622601" MODIFIED="1570438978935" POSITION="right" TEXT="Sequential Circuits"/>
<node CREATED="1570438981511" ID="ID_1563272102" MODIFIED="1570439008472" POSITION="left" TEXT="Sequential Circuits: Modules with Guarded Interfaces"/>
<node CREATED="1570439010783" ID="ID_1730805459" MODIFIED="1570439017772" POSITION="right" TEXT="Hardware Synthesis in Bluespec"/>
<node CREATED="1570439020524" ID="ID_1332962136" MODIFIED="1570439026598" POSITION="left" TEXT="Module Interfaces and Concurrency"/>
<node CREATED="1570439027376" ID="ID_143352903" MODIFIED="1570439036622" POSITION="right" TEXT="Implementing RISC-V Processor in Hardware"/>
<node CREATED="1570439039120" ID="ID_486415446" MODIFIED="1570439045168" POSITION="left" TEXT="Multicycle Processors"/>
<node CREATED="1570439046248" ID="ID_1945260343" MODIFIED="1570439050384" POSITION="right" TEXT="The Memory Hierarchy"/>
<node CREATED="1570439052777" ID="ID_1158413041" MODIFIED="1570439059173" POSITION="left" TEXT="Memory Systems: Design and Implementation"/>
<node CREATED="1570439059960" ID="ID_1135697528" MODIFIED="1570439065136" POSITION="right" TEXT="Operating Systems"/>
<node CREATED="1570439065809" ID="ID_1305872688" MODIFIED="1570439069216" POSITION="left" TEXT="Virtual Memory"/>
<node CREATED="1570439069846" ID="ID_1182501336" MODIFIED="1570439074789" POSITION="right" TEXT="Introduction to Pipelining"/>
<node CREATED="1570439075425" ID="ID_649835535" MODIFIED="1570439080729" POSITION="left" TEXT="Processor Pipelining"/>
<node CREATED="1570439083497" ID="ID_1028089288" MODIFIED="1570439088785" POSITION="right" TEXT="Implementing Pipelines"/>
<node CREATED="1570439089401" ID="ID_1351657016" MODIFIED="1570439093105" POSITION="left" TEXT="Synchronization">
<node CREATED="1573493547987" ID="ID_331378129" MODIFIED="1573493555303" TEXT="Thread-level Parallelism">
<node CREATED="1573493556268" ID="ID_1190931688" MODIFIED="1573493569315" TEXT="Divide computation among multiple threads of execution">
<node CREATED="1573493576276" ID="ID_608769041" MODIFIED="1573493609722" TEXT="Multiple independent sequential threads which compete for shared resources such as memory and I/O devices">
<node CREATED="1573493630359" ID="ID_565251796" MODIFIED="1573493636314" TEXT="CPU, Memory, I/O devices"/>
</node>
<node CREATED="1573493642096" ID="ID_851449550" MODIFIED="1573493655683" TEXT="Multiple cooperatin sequential threads, which communicate with each other">
<node CREATED="1573493657424" ID="ID_122256551" MODIFIED="1573493673494" TEXT="How to share info?"/>
</node>
</node>
<node CREATED="1573493680487" ID="ID_1432542808" MODIFIED="1573493684471" TEXT="Communication models">
<node CREATED="1573493684648" ID="ID_308340905" MODIFIED="1573493688449" TEXT="Shared memory:">
<node CREATED="1573493688671" ID="ID_1626641392" MODIFIED="1573493691879" TEXT="Single address space">
<node CREATED="1573493713583" ID="ID_860308516" MODIFIED="1573493728268" TEXT="One thread writes to a particular location in memory and another thread reads from the location"/>
</node>
<node CREATED="1573493692808" ID="ID_1220432913" MODIFIED="1573493702351" TEXT="Implicit communication by memory loads &amp; stores"/>
</node>
<node CREATED="1573493736368" ID="ID_177289846" MODIFIED="1573493739304" TEXT="Message passing">
<node CREATED="1573493739561" ID="ID_560719070" MODIFIED="1573493751406" TEXT="Separate address spaces"/>
<node CREATED="1573493752865" ID="ID_14829650" MODIFIED="1573493764207" TEXT="Explicit communication by sending and receiving messages">
<node CREATED="1573493779616" ID="ID_1598674060" MODIFIED="1573493785625" TEXT="Over shared network"/>
</node>
</node>
</node>
</node>
<node CREATED="1573493797855" ID="ID_1128098238" MODIFIED="1573493801698" TEXT="Synchronization">
<node CREATED="1573493802209" ID="ID_1673151125" MODIFIED="1573493815050" TEXT="Need for synchronization arises whenever there are parallel processes in a system">
<node CREATED="1573493816236" ID="ID_1549840525" MODIFIED="1573493836541" TEXT="Fork and Joins: A parallel process may want to wait until several events have occurred">
<node CREATED="1573493839483" ID="ID_1573099459" MODIFIED="1573493846909" TEXT="To merge results at some point and continue"/>
</node>
<node CREATED="1573493854804" ID="ID_1739571810" MODIFIED="1573493889116" TEXT="Producer-Consumer: A consumer process must wait until the producer process has produced data">
<node CREATED="1573493900444" ID="ID_758284878" MODIFIED="1573493910963" TEXT="Consumer cannot run unless producer produces something"/>
<node CREATED="1573493915638" ID="ID_1150969917" MODIFIED="1573493925935" TEXT="We need a means to synchronize communication between them"/>
</node>
<node CREATED="1573493932830" ID="ID_1580644577" MODIFIED="1573493964406" TEXT="Mutual Exclusion: Operating system has to ensure that a resource is used by only one process at a given time">
<node CREATED="1573493979743" ID="ID_1301894257" MODIFIED="1573493984941" TEXT="Which process gets to use the resource"/>
</node>
</node>
</node>
<node CREATED="1573493989719" ID="ID_1510362649" MODIFIED="1573493995191" TEXT="Thread-safe programming">
<node CREATED="1573493995455" ID="ID_631623051" MODIFIED="1573494009848" TEXT="Multithreaded programs can be executed on a uniprocessor by timesharing">
<node CREATED="1573494011011" ID="ID_1046476815" MODIFIED="1573494034817" TEXT="Each thread is executed for a while (timer interrupt) and then the OS switches to another thread, repeatedly"/>
</node>
<node CREATED="1573494045498" ID="ID_1696001573" MODIFIED="1573494073434" TEXT="Thread-safe multithreaded programs behave the same way regardless of whether they are executed on multiprocessors or a single processor">
<node CREATED="1573494074810" ID="ID_1886725050" MODIFIED="1573494092513" TEXT="Assume each thread runs in it&apos;s own processor"/>
<node CREATED="1573494588508" ID="ID_965602483" MODIFIED="1573494626333">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      loop: &lt;xxx&gt;;
    </p>
    <p>
      &#160;&#160;&#160;&#160;send(c);
    </p>
    <p>
      &#160;&#160;&#160;&#160;goto loop
    </p>
  </body>
</html>
</richcontent>
<node CREATED="1573494595722" ID="ID_1025216645" MODIFIED="1573494595722" TEXT=""/>
</node>
<node CREATED="1573494628443" ID="ID_8634392" MODIFIED="1573494651342">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      loop: c = rcr();
    </p>
    <p>
      &#160;&#160;&#160;&#160;&lt;yyy&gt;;
    </p>
    <p>
      &#160;&#160;&#160;&#160;goto loop
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1573494667601" ID="ID_1465395643" MODIFIED="1573494677256" TEXT="Precedence Constraints: a &lt; b">
<node CREATED="1573494677503" ID="ID_110455042" MODIFIED="1573494681304" TEXT="a precedes b">
<node CREATED="1573494723507" ID="ID_1310613368" MODIFIED="1573494729957" TEXT="send1 &lt; rcv1, ...">
<node CREATED="1573494779777" ID="ID_669094319" MODIFIED="1573494802342" TEXT="If writing to a shared location, consumer must consume before producer overrides it"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1570439093646" ID="ID_235847428" MODIFIED="1570439101513" POSITION="right" TEXT="Implementing Processor Pipelines"/>
<node CREATED="1570439102841" ID="ID_356527345" MODIFIED="1570439110847" POSITION="left" TEXT="The Digital Abstraction and Sequential Timing"/>
<node CREATED="1570439111393" ID="ID_1716933023" MODIFIED="1570439115344" POSITION="right" TEXT="Cache Coherence"/>
<node CREATED="1570439118501" ID="ID_562714443" MODIFIED="1570439125856" POSITION="left" TEXT="Overlord - AInz vs Shalltear"/>
</node>
</map>
