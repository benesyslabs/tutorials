{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12560\viewh13880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Top 10 programming books:\
1. Code Complete 2\
	1. How to structure code\
2. Clean Code\
	1. A level higher than code complete\
	2. Architectural level to low level\
3. Design Patterns\
	1. Identifying patterns and refactoring to more formal onces\
4. Structure and Interpretation of Computer Programs\
	1. Exercises are hard\
	2. Functional perspective\
5. Domain Driven Design\
	1. It takes multiple reading to understand\
	2. It is hard to implement\
6. Patterns of Enterprise Application Architecture\
	1. All patterns for enterprise\
		1. Messaging\
		2. Pub-Sub\
			1. Microservices, SOA\
	2. A little dry (like Design patterns)\
7. Cracking the Coding Interview\
	1. Good for getting jobs at Google or Microsoft\
	2. CS type of problems\
		1. Topcoder\
8. Code - Charles Petzold\
	1. Fun to read\
	2. Teaches a lot of stuff (self taught programmers)\
		1. How code actually works\
		2. How CPU works \'85\
9. GEB - An Eternal Golden Braid\
	1. It is fun to read and refreshingly deep (analytical depth and logic)\
	2. Doesn\'92t expand mind much\
10. Agile Software Development - Uncle Bob\
	1. Java version\
		1. TDD\
		2. Solid principles\
		3. The right way to do agile\
		4. Good examples\
	2. C# version\
\
Programming Pearls\
	1. Problems book\
Soft Skills}