{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12600\viewh13800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Issues to overcome:\
	1. Self confidence issues\
	2. Imposter syndrome (doubting ones own skills and fear that they may get exposed as fraud)\
There is always room to refresh things\
\

\b Time is your most valuable resource\

\b0 1. The more effectively I use my time, the less time I waste, the better chance I have of learning the concepts and intuition I need to be successful in coding interviews and be confident to handle any question possible - Huffine\
\

\b What do we need to know about existing solutions?\

\b0 1. Time wasted (though unavoidable in certain circumstances) as follows:\
	1. Searching internet to fill in gaps to get full experience needed to prepare\
	2. Grinding problems instead of focusing time effectively preparing across broad range of categories to learn what\'92s needed\
		1. Spend time on most important concepts and most likely to be tested on\
	3. Knowing only what to study but not why we study or the outcome of it\
	4. Lack of in-person support. Everything may not be done with pre-existing texts and videos (we might need to ask questions some times)\
\

\b Review of cool tools to help us land the next job\
Codewars
\b0 : Focuses on improving skills by training together with others on real code challenges\
	1. 
\b Pros
\b0 : Free. Good for practice questions and staying sharp. Good community and points system\
	2. 
\b Cons
\b0 : No focus on interviews. Only for sharpening on programming and for fun of coding. Just grinding (no categories)\
		1. Not tailor-made for interviews but makes us better at coding interviews (need to work hard for this)\
\

\b Skilled.dev
\b0 : Years of interview expertise refined into single platform. Carefully curated to teach what is required for coding interviews and land a job. step-by-step guidance with tools to make it easy to prepare for interviews\
	1. 
\b Pros
\b0 : As complete as possible (minimises need to search additional resources). Targeted at seniors and devs who came out of coding bootcamp. Comprehensive. Step-by-step guided text article, solution walkthrough video, integrated code execution environment to test solutions.\
	2. 
\b Cons
\b0 : Recently launched. Need to have faith to be early adopter\
		1. Great solution for problems that other platforms miss\
\

\b LeetCode
\b0 : To enhance skills, expand knowledge, prepare for tech interviews\
	1. 
\b Pros
\b0 : Categories of problems, solutions and brief explanations, forums for discussion and comments\
	2. 
\b Cons
\b0 : No guidance or curation - user must decide how to spend time with it (may or may not be effective). Forced to grind instead of learning. Explanations are high level (needs more research and prior knowledge to discover important learning outcomes). A little expensive to put cherry on top.\
		1. Misses out on proper guidance, content is great, ux may cause waste of time\
\

\b Other common methods to prepare for coding interviews
\b0 \
\

\b freeCodeCamp
\b0 : \
	
\b Pros
\b0 : Good community, some curation\
	
\b Cons
\b0 : Mostly points to external resources, curation is light (still may be grinding and forced to search internet when we don\'92t understand). Need to discover learning outcomes for ourselves.\
		1. https://yangshun.github.io/tech-interview-handbook/\
		2. https://github.com/jwasham/coding-interview-university\
\

\b YouTube Channels\

\b0 	
\b Pros
\b0 : Free. Great teachers, can find video for anything\
	
\b Cons
\b0 : Not guided or curated, time consuming to decide what to study and figure out what\'92s important. Uncertainty about how well things are maintained or updated. No code execution environment for code, tests, solutions\
\

\b Crack the Coding Interview [Book]
\b0 \
	
\b Pros
\b0 : Cheaper compared to LeetCode, many questions, covers all interview topics (concepts, job hunt, soft skills, essential data structures and algorithms)\
	
\b Cons
\b0 : Not one-stop product. Explanations are at high level. Forces us to gain further knowledge online to truly learn the topics (unless we have CS background and need a refresher). Not digital (environment to ru code, test solutions, community discussions, videos, interactive examples, easily linking and connecting between topics and concepts), no updates available\
\

\b Things to consider before we go
\b0 \
1. 
\b Do we want only free stuff or willing to pay a bit to get higher quality presentations?
\b0 \
	1. Making investment is worth it and not going free-only\
		1. Premium content may help get a job fast\
2. 
\b How time-conscious am I?
\b0 \
	1. Many platforms waste time which can be used to prepare\
3. 
\b Is it my first interview? Am I familiar with the process?
\b0 \
	1. Online platforms is good for newbies (skilled.dev, LeetCode). It has interface to check answers online}