{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red230\green230\blue230;\red255\green255\blue10;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\csgray\c92143;\cssrgb\c99942\c98555\c0;\cssrgb\c100000\c100000\c100000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww12580\viewh6260\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Data Structures (implement each one of them from scratch)
\b0 \
\cb2 	
\b Data types
\b0 \
		Boolean\
		Character\
		Floating-point\
		\cb3 Fixed-point number (fixed number of digits after decimal point)\cb2 \
		Integer\
		Reference\
		\cb3 Enumerated type\cb2 \
		\cb3 Date Time\cb2 \
	Composite types\
		Array\
			\cb3 Associative array\cb2 \
		\cb3 Record\cb2 \
		Union\
	Abstract data types\
		Container\
		List\
		Tuple\
		\cb3 Multimap\cb2 \
		Set\
		\cb3 Multiset\cb2 \
		Stack\
		Queue\
		Double-ended queue\
		Graph\
	Linear data structures\
		Arrays\
			Array\
			\cb3 Bit array\cb2 \
			\cb3 Bit field\cb2 \
			\cb3 Bitboard\cb2 \
			\cb3 Bitmap\cb2 \
			Circular buffer\
			\cb3 Control table\cb2 \
			Image\
			\cb3 Dope vector\cb2 \
			Dynamic array\
			\cb3 Gap buffer\cb2 \
			\cb3 Hashed array tree\cb2 \
			\cb3 Lookup table\cb2 \
			Matrix\
			\cb3 Parallel array\cb2 \
			Sorted array\
			Sparse matrix\
			\cb3 Iliffe vector\cb2 \
			\cb3 Variable-length array\cb2 \
		Lists\
			Doubly linked list\
			Array list\
			Linked list\
			\cb3 Association list\cb2 \
			\cb3 Self-Organising list\cb2 \
			\cb3 Skip list\cb2 \
			\cb3 Unrolled linked list\cb2 \
			\cb3 VList\cb2 \
			\cb3 Vonc-tree list\cb2 \
			\cb3 Xor linked list\cb2 \
			\cb3 Zipper\cb2 \
			\cb3 Doubly connected edge list\cb2 \
			\cb3 Difference list\cb2 \
			\cb3 Free list\cb2 \
		Trees\
			Binary trees\
				\cb3 AA tree\cb2 \
				AVL tree\
				Binary search tree\
				Binary tree\
				\cb3 Cartesian tree\cb2 \
				\cb3 Conc-tree list\cb2 \
				\cb3 Left-child right-sibling binary tree\cb2 \
				\cb3 Order statistic tree\cb2 \
				\cb3 Pagoda\cb2 \
				\cb3 Randomized binary search tree\cb2 \
				Red-black tree\
				\cb3 Rope\cb2 \
				\cb3 Scapegoat tree\cb2 \
				Self-balancing binary search tree\
				\cb3 Splay tree\cb2 \
				\cb3 T-tree\cb2 \
				\cb3 Tango tree\cb2 \
				\cb3 Threaded binary tree\cb2 \
				\cb3 Top tree\cb2 \
				\cb3 Treap\cb2 \
				\cb3 WAVL tree\cb2 \
				\cb3 Weight-balanced tree\cb2 \
			B-trees\
				\cb3 B-tree\cb2 \
				\cb3 B+ tree\cb2 \
				\cb3 B*-tree\cb2 \
				\cb3 B sharp tree\cb2 \
				\cb3 Dancing tree\cb2 \
				2-3 tree\
				\cb3 2-3-4 tree\cb2 \
				\cb3 Queap\cb2 \
				\cb3 Fusion tree\cb2 \
				\cb3 Bx-tree\cb2 \
				\cb3 AList\cb2 \
			Heaps\
				Heap\
				\cb4 Binary heap\cb2 \
				\cb3 B-heap\cb2 \
				\cb3 Weak heap\cb2 \
				\cb3 Binomial heap\cb2 \
				\cb3 Fibonacci heap\cb2 \
				\cb3 AF-heap\cb2 \
				\cb3 Leonardo heap\cb2 \
				\cb3 2-3 heap\cb2 \
				\cb3 Soft heap\cb2 \
				\cb3 Pairing heap\cb2 \
				\cb3 Leftist heap\cb2 \
				\cb3 Treap\cb2 \
				\cb3 Beap\cb2 \
				\cb3 Skew heap\cb2 \
				Ternary heap\
				\cb3 D-ary heap\cb2 \
				\cb3 Brodal queue\cb2 \
			Trees\
				Tree (data structure)\
				\cb3 Radix tree\cb2 \
				\cb3 Suffix tree\cb2 \
				\cb3 Suffix array\cb2 \
				\cb3 Compressed suffix array\cb2 \
				\cb3 FM-index\cb2 \
				\cb3 Generalised suffix tree\cb2 \
				B-tree\
				\cb3 Judy array\cb2 \
				\cb3 X-fast trie\cb2 \
				\cb3 Y-fast trie\cb2 \
				\cb3 Merkle tree\cb2 \
				\cb3 Ctree\cb2 \
			Multiway trees\
				Ternary tree\
				K-ary tree\
				\cb3 And-or tree\cb2 \
				\cb3 (a,b)-tree\cb2 \
				\cb3 Link/cut tree\cb2 \
				\cb3 SPQR-tree\cb2 \
				\cb3 Spaghetti stack\cb2 \
				\cb3 Disjoint-set data structure\cb2 \
				\cb3 Fusion tree\cb2 \
				\cb3 Enfilade\cb2 \
				\cb3 Exponential tree\cb2 \
				\cb3 Fenwick tree\cb2 \
				\cb3 Van Emde Boas tree\cb2 \
				\cb3 Rose tree\cb2 \
			Space-partitioning trees\
				\cb3 Segment tree\cb2 \
				\cb3 Interval tree\cb2 \
				\cb3 Range tree\cb2 \
				\cb3 Bin\cb2 \
				\cb3 K-d tree\cb2 \
				\cb3 Implicit k-d tree\cb2 \
				\cb3 Min/max k-d tree\cb2 \
				\cb3 Relaxed k-d tree\cb2 \
				\cb3 Adaptive k-d tree\cb2 \
				\cb3 Quadtree\cb2 \
				\cb3 Octree\cb2 \
				\cb3 Linear octree\cb2 \
				\cb3 Z-order\cb2 \
				\cb3 UB-tree\cb2 \
				\cb3 R-tree\cb2 \
				\cb3 R+ tree\cb2 \
				\cb3 Hilbert R-tree\cb2 \
				\cb3 X-tree\cb2 \
				\cb3 Matrix tree\cb2 \
				\cb3 Cover tree\cb2 \
				\cb3 M-tree\cb2 \
				\cb3 VP-tree\cb2 \
				\cb3 BK-tree\cb2 \
				\cb3 Bounding interval hierarchy\cb2 \
				\cb3 Bounding volume hierarchy\cb2 \
				\cb3 BSP tree\cb2 \
				\cb3 Rapidly exploring random tree\cb2 \
			Application-specific trees\
				\cb3 Abstract syntax tree\cb2 \
				\cb3 Parse tree\cb2 \
				\cb3 Decision tree\cb2 \
				\cb3 Alternating decision tree\cb2 \
				\cb3 Minimax tree\cb2 \
				\cb3 Expectiminimax tree\cb2 \
				\cb3 Finger tree\cb2 \
				\cb3 Expression tree\cb2 \
				\cb3 Log-structured merge-tree\cb2 \
				\cb3 Lexicographic Search Tree\cb2 \
\
Hash-based Structures\
	\cb3 Bloom filter\cb2 \
	\cb3 Count-Min sketch\cb2 \
	\cb3 Distributed hash table\cb2 \
	\cb3 Double hashing\cb2 \
	Dynamic perfect hash table\
	\cb3 Hash array mapped trie\cb2 \
	\cb3 Hash list\cb2 \
	Hash table\
	\cb3 Hash tree\cb2 \
	\cb3 Hash trie\cb2 \
	\cb3 Koorde\cb2 \
	\cb3 Prefix hash tree\cb2 \
	\cb3 Rolling hash\cb2 \
	\cb3 MinHash\cb2 \
	\cb3 Quotient filter\cb2 \
	\cb3 Ctrie\cb2 \
\
Graphs\
	Graph\
	Adjacency list\
	Adjacency matrix\
	\cb3 Graph-structured stack\cb2 \
	\cb3 Scene graph\cb2 \
	\cb3 Decision tree\cb2 \
		\cb3 Binary decision diagram\cb2 \
	\cb3 Zero-suppressed decision diagram\cb2 \
	\cb3 And-inverter graph\cb2 \
	Directed graph\
	Directed acyclic graph\
	\cb3 Propositional directed acyclic graph\cb2 \
	\cb3 Multigraph\cb2 \
	\cb3 Hypergraph\cb2 \
\
Other\
	\cb3 Lightmap\cb2 \
	\cb3 Winged edge\cb2 \
	\cb3 Quad-edge\cb2 \
	\cb3 Routing table\cb2 \
	\cb3 Symbol table\cb2 \
\
Purely functional data structure\cb1 \
	}